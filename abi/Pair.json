{
  "abi": [
    { "type": "constructor", "inputs": [], "stateMutability": "nonpayable" },
    {
      "type": "function",
      "name": "APPROVE_TYPEHASH",
      "inputs": [],
      "outputs": [{ "name": "", "type": "bytes32", "internalType": "bytes32" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "DOMAIN_SEPARATOR",
      "inputs": [],
      "outputs": [{ "name": "", "type": "bytes32", "internalType": "bytes32" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "basis",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "calcNewFeeRatio",
      "inputs": [
        { "name": "_oldFeeRatio", "type": "uint64", "internalType": "uint64" },
        { "name": "_elapsedTime", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [
        { "name": "_newFeeRatio", "type": "uint64", "internalType": "uint64" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "collectFee",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "deposit0",
      "inputs": [
        { "name": "to", "type": "address", "internalType": "address" },
        { "name": "input", "type": "uint256", "internalType": "uint256" },
        { "name": "minOutput", "type": "uint256", "internalType": "uint256" },
        { "name": "time", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [
        { "name": "output", "type": "uint256", "internalType": "uint256" }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "deposit1",
      "inputs": [
        { "name": "to", "type": "address", "internalType": "address" },
        { "name": "input", "type": "uint256", "internalType": "uint256" },
        { "name": "minOutput", "type": "uint256", "internalType": "uint256" },
        { "name": "time", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [
        { "name": "output", "type": "uint256", "internalType": "uint256" }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "factory",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "farm",
      "inputs": [],
      "outputs": [
        { "name": "", "type": "address", "internalType": "contract IFarm" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "feeTo",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getFeeRatio",
      "inputs": [],
      "outputs": [
        { "name": "_feeRatio0", "type": "uint64", "internalType": "uint64" },
        { "name": "_feeRatio1", "type": "uint64", "internalType": "uint64" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getPremium",
      "inputs": [
        { "name": "time", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [
        { "name": "premium", "type": "uint256", "internalType": "uint256" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getReserves",
      "inputs": [],
      "outputs": [
        { "name": "reserve0", "type": "uint256", "internalType": "uint256" },
        { "name": "reserve1", "type": "uint256", "internalType": "uint256" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "halfLife",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint64", "internalType": "uint64" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "initialize",
      "inputs": [
        { "name": "_token0", "type": "address", "internalType": "address" },
        { "name": "_token1", "type": "address", "internalType": "address" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "nonces",
      "inputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "noteCount",
      "inputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "notes",
      "inputs": [
        { "name": "", "type": "address", "internalType": "address" },
        { "name": "", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [
        { "name": "token0Amt", "type": "uint256", "internalType": "uint256" },
        { "name": "token1Amt", "type": "uint256", "internalType": "uint256" },
        { "name": "due", "type": "uint256", "internalType": "uint256" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "operatorApprovals",
      "inputs": [
        { "name": "", "type": "address", "internalType": "address" },
        { "name": "", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "rescueERC20",
      "inputs": [
        {
          "name": "tokenAddress",
          "type": "address",
          "internalType": "address"
        },
        { "name": "to", "type": "address", "internalType": "address" },
        { "name": "amount", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setApprovalForAll",
      "inputs": [
        { "name": "operator", "type": "address", "internalType": "address" },
        { "name": "approved", "type": "bool", "internalType": "bool" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setApprovalForAllWithSig",
      "inputs": [
        { "name": "owner", "type": "address", "internalType": "address" },
        { "name": "operator", "type": "address", "internalType": "address" },
        { "name": "approved", "type": "bool", "internalType": "bool" },
        { "name": "deadline", "type": "uint256", "internalType": "uint256" },
        { "name": "sig", "type": "bytes", "internalType": "bytes" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setBasis",
      "inputs": [
        { "name": "_basis", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setFarm",
      "inputs": [
        { "name": "_farm", "type": "address", "internalType": "address" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setFeeTo",
      "inputs": [
        { "name": "_feeTo", "type": "address", "internalType": "address" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setHalfLife",
      "inputs": [
        { "name": "_halfLife", "type": "uint64", "internalType": "uint64" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "swap0in",
      "inputs": [
        { "name": "to", "type": "address", "internalType": "address" },
        { "name": "input", "type": "uint256", "internalType": "uint256" },
        { "name": "minOutput", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [
        { "name": "output", "type": "uint256", "internalType": "uint256" }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "swap1in",
      "inputs": [
        { "name": "to", "type": "address", "internalType": "address" },
        { "name": "input", "type": "uint256", "internalType": "uint256" },
        { "name": "minOutput", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [
        { "name": "output", "type": "uint256", "internalType": "uint256" }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "token0",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "token1",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "withdraw",
      "inputs": [
        { "name": "index", "type": "uint256", "internalType": "uint256" },
        { "name": "to", "type": "address", "internalType": "address" }
      ],
      "outputs": [
        { "name": "token0Amt", "type": "uint256", "internalType": "uint256" },
        { "name": "token1Amt", "type": "uint256", "internalType": "uint256" }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "withdrawFrom",
      "inputs": [
        { "name": "from", "type": "address", "internalType": "address" },
        { "name": "index", "type": "uint256", "internalType": "uint256" },
        { "name": "to", "type": "address", "internalType": "address" }
      ],
      "outputs": [
        { "name": "token0Amt", "type": "uint256", "internalType": "uint256" },
        { "name": "token1Amt", "type": "uint256", "internalType": "uint256" }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "event",
      "name": "ApprovalForAll",
      "inputs": [
        {
          "name": "owner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "operator",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "approved",
          "type": "bool",
          "indexed": false,
          "internalType": "bool"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Deposit",
      "inputs": [
        {
          "name": "user",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "isToken0",
          "type": "bool",
          "indexed": true,
          "internalType": "bool"
        },
        {
          "name": "index",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "amountIn",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "token0Amt",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "token1Amt",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "due",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "FeeCollected",
      "inputs": [
        {
          "name": "token0Amt",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "token1Amt",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Swap",
      "inputs": [
        {
          "name": "sender",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "isSwap0",
          "type": "bool",
          "indexed": true,
          "internalType": "bool"
        },
        {
          "name": "amountIn",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "amountOut",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "to",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Withdraw",
      "inputs": [
        {
          "name": "user",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "isToken0",
          "type": "bool",
          "indexed": true,
          "internalType": "bool"
        },
        {
          "name": "index",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "amountOut",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    }
  ],
  "bytecode": {
    "object": "0x60a0604052600180546001600160401b0319166102d01781556006556709b6e64a8ec60000600a5534801561003357600080fd5b5060408051808201825260048152632830b4b960e11b6020918201528151808301835260018152603160f81b9082015281517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818301527feb97ef53980152ad9ea08faf89a3bce92c73647576c726a0fba9da4e28269ade818401527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc66060820152466080808301919091523060a0808401919091528451808403909101815260c0909201909352805191012090819052613427610123600039600081816102fa0152610d7e01526134276000f3fe608060405234801561001057600080fd5b50600436106101ef5760003560e01c80637ecebe001161010f578063d4d5d32a116100a2578063e146141c11610071578063e146141c14610517578063e162402f1461052a578063f385cecb1461053d578063f46901ed1461054657600080fd5b8063d4d5d32a14610487578063d4f26c511461048f578063dc950d36146104a2578063e0b117ff146104c257600080fd5b8063b2118a8d116100de578063b2118a8d14610427578063c45a01551461043a578063c9f10f8c1461044d578063d21220a71461047457600080fd5b80637ecebe00146103ce5780637f568f18146103ee578063a22cb46514610401578063a9d9db4d1461041457600080fd5b80633644e5151161018757806359362b881161015657806359362b8814610355578063666093341461037d5780637b7e9fac146103a85780637bc90d1c146103bb57600080fd5b80633644e515146102f557806336e9332d1461031c578063485cc9551461032f57806353d56bf51461034257600080fd5b80630dfe1681116101c35780630dfe1681146102925780631bf1fffb146102ac57806322ff2a8e146102cd57806330d6618e146102e257600080fd5b8062f714ce146101f4578063017e7e58146102215780630902f1ac1461024c5780630d95e05414610254575b600080fd5b610207610202366004612f5d565b610559565b604080519283526020830191909152015b60405180910390f35b600354610234906001600160a01b031681565b6040516001600160a01b039091168152602001610218565b6102076105a7565b610282610262366004612f8d565b600d60209081526000928352604080842090915290825290205460ff1681565b6040519015158152602001610218565b60015461023490600160401b90046001600160a01b031681565b6102bf6102ba366004612fbb565b6106b2565b604051908152602001610218565b6102e06102db366004612feb565b6107a1565b005b6102bf6102f0366004613006565b6108f3565b6102bf7f000000000000000000000000000000000000000000000000000000000000000081565b600954610234906001600160a01b031681565b6102e061033d366004612f8d565b6109f8565b6102bf610350366004613041565b610a18565b61035d610b13565b604080516001600160401b03938416815292909116602083015201610218565b61039061038b366004613076565b610b8d565b6040516001600160401b039091168152602001610218565b6102e06103b63660046130ae565b610be3565b600154610390906001600160401b031681565b6102bf6103dc366004613160565b60076020526000908152604090205481565b6102e06103fc366004612fbb565b610ecf565b6102e061040f36600461317d565b610fac565b6102bf610422366004613041565b611068565b6102e06104353660046131ab565b611152565b600854610234906001600160a01b031681565b6102bf7fd7db667cdba90ca333b850481afd8f802dc1081fc1d7ee77ee75ae69468a0b1781565b600254610234906001600160a01b031681565b6102e061123d565b6102e061049d366004613160565b611273565b6102bf6104b0366004613160565b600b6020526000908152604090205481565b6104fc6104d03660046131ec565b600c60209081526000928352604080842090915290825290208054600182015460029092015490919083565b60408051938452602084019290925290820152606001610218565b6102bf610525366004613006565b61136d565b61020761053836600461320a565b61145e565b6102bf600a5481565b6102e0610554366004613160565b6114d9565b6000806006546001146105875760405162461bcd60e51b815260040161057e9061324c565b60405180910390fd5b60006006556105973385856115ec565b6001600655909590945092505050565b600480546001546040516370a0823160e01b81523093810193909352600092839291600160401b90046001600160a01b0316906370a0823190602401602060405180830381865afa158015610600573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610624919061326c565b61062e919061329b565b6005546002546040516370a0823160e01b815230600482015292945090916001600160a01b03909116906370a0823190602401602060405180830381865afa15801561067e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106a2919061326c565b6106ac919061329b565b90509091565b60008162015180036106ec57670de0b6b3a7640000600a54664a620d26ead0e46106dc91906132ae565b6106e691906132db565b92915050565b816203f4800361071457670de0b6b3a7640000600a546680d5cceb1376a86106dc91906132ae565b8162093a800361073c57670de0b6b3a7640000600a5466c4cc884ac66cf86106dc91906132ae565b8162278d000361076557670de0b6b3a7640000600a54670197699c5ceeb4006106dc91906132ae565b60405162461bcd60e51b815260206004820152600c60248201526b696e76616c69642074696d6560a01b604482015260640161057e565b919050565b6006546001146107c35760405162461bcd60e51b815260040161057e9061324c565b6000600681905550336001600160a01b0316600860009054906101000a90046001600160a01b03166001600160a01b031663f77c47916040518163ffffffff1660e01b81526004016020604051808303816000875af115801561082a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061084e91906132fd565b6001600160a01b0316146108745760405162461bcd60e51b815260040161057e9061331a565b6000816001600160401b0316116108cd5760405162461bcd60e51b815260206004820152601860248201527f68616c66206c6966652063616e6e6f74206265207a65726f0000000000000000604482015260640161057e565b6001805467ffffffffffffffff19166001600160401b0392909216919091178155600655565b60006006546001146109175760405162461bcd60e51b815260040161057e9061324c565b60006006556001600160a01b0385166109665760405162461bcd60e51b8152602060048201526011602482015270746f2063616e6e6f74206265207a65726f60781b604482015260640161057e565b6000610972858561187d565b925090506000610981846106b2565b9050610992876000858988866119a7565b6003546001600160a01b0316156109c5576109ae6002836132db565b600560008282546109bf919061333d565b90915550505b6002546109dd906001600160a01b0316333089611ae7565b6109e987878584611c17565b50506001600655949350505050565b610a028282611cc5565b5050600880546001600160a01b03191633179055565b6000600654600114610a3c5760405162461bcd60e51b815260040161057e9061324c565b60006006819055610a4d848461187d565b6003549093509091506001600160a01b031615610a8657610a6f6002826132db565b60056000828254610a80919061333d565b90915550505b600254610a9e906001600160a01b0316333087611ae7565b600154610abc90600160401b90046001600160a01b03168684611d36565b60408051858152602081018490526001600160a01b0387169160009133917f66251e495e6e69e208ab08e2bc259dbe2ef482a8c4a93b8984b03a1eb27e1b9e91015b60405180910390a45060016006559392505050565b600080600080610b4b6000546001600160401b0380821692600160401b8304821692600160801b8104831692600160c01b9091041690565b92965090945092509050610b6c8461038b6001600160401b0385164261329b565b9350610b858361038b6001600160401b0384164261329b565b925050509091565b6001546000908190610ba99084906001600160401b0316611e51565b90506000610bc1610bb983613350565b600f0b611e92565b9050610bda600f82900b6001600160401b038716612950565b95945050505050565b8242111580610bf0575082155b610c2e5760405162461bcd60e51b815260206004820152600f60248201526e65786365656420646561646c696e6560881b604482015260640161057e565b6001600160a01b038616610c7b5760405162461bcd60e51b81526020600482015260146024820152736f776e65722063616e6e6f74206265207a65726f60601b604482015260640161057e565b6001600160a01b038516610ccb5760405162461bcd60e51b81526020600482015260176024820152766f70657261746f722063616e6e6f74206265207a65726f60481b604482015260640161057e565b6001600160a01b038616600090815260076020526040812080547fd7db667cdba90ca333b850481afd8f802dc1081fc1d7ee77ee75ae69468a0b17918991899189919086610d1883613376565b909155506040805160208101969096526001600160a01b03948516908601529290911660608401521515608083015260a082015260c0810185905260e00160408051601f1981840301815290829052805160209182012061190160f01b918301919091527f00000000000000000000000000000000000000000000000000000000000000006022830152604282018190529150600090606201604051602081830303815290604052805190602001209050610e098185858080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506129bb92505050565b6001600160a01b0316886001600160a01b031614610e5d5760405162461bcd60e51b8152602060048201526011602482015270696e76616c6964207369676e617475726560781b604482015260640161057e565b6001600160a01b038881166000818152600d60209081526040808320948c1680845294825291829020805460ff19168b151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050505050505050565b600654600114610ef15760405162461bcd60e51b815260040161057e9061324c565b6000600681905550336001600160a01b0316600860009054906101000a90046001600160a01b03166001600160a01b031663f77c47916040518163ffffffff1660e01b81526004016020604051808303816000875af1158015610f58573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f7c91906132fd565b6001600160a01b031614610fa25760405162461bcd60e51b815260040161057e9061331a565b600a556001600655565b6001600160a01b038216610ffc5760405162461bcd60e51b81526020600482015260176024820152766f70657261746f722063616e6e6f74206265207a65726f60481b604482015260640161057e565b336000818152600d602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b600060065460011461108c5760405162461bcd60e51b815260040161057e9061324c565b6000600681905561109d8484612aa4565b6003549093509091506001600160a01b0316156110d6576110bf6002826132db565b600460008282546110d0919061333d565b90915550505b6001546110f590600160401b90046001600160a01b0316333087611ae7565b60025461110c906001600160a01b03168684611d36565b60408051858152602081018490526001600160a01b0387169160019133917f66251e495e6e69e208ab08e2bc259dbe2ef482a8c4a93b8984b03a1eb27e1b9e9101610afe565b6008546040805163f77c479160e01b8152905133926001600160a01b03169163f77c479191600480830192602092919082900301816000875af115801561119d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111c191906132fd565b6001600160a01b0316146111e75760405162461bcd60e51b815260040161057e9061331a565b6001546001600160a01b03600160401b90910481169084160361120957600080fd5b6002546001600160a01b039081169084160361122457600080fd5b6112386001600160a01b0384168383611d36565b505050565b60065460011461125f5760405162461bcd60e51b815260040161057e9061324c565b600060065561126c612bc1565b6001600655565b6006546001146112955760405162461bcd60e51b815260040161057e9061324c565b6000600681905550336001600160a01b0316600860009054906101000a90046001600160a01b03166001600160a01b031663f77c47916040518163ffffffff1660e01b81526004016020604051808303816000875af11580156112fc573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061132091906132fd565b6001600160a01b0316146113465760405162461bcd60e51b815260040161057e9061331a565b600980546001600160a01b0319166001600160a01b03929092169190911790556001600655565b60006006546001146113915760405162461bcd60e51b815260040161057e9061324c565b60006006556001600160a01b0385166113e05760405162461bcd60e51b8152602060048201526011602482015270746f2063616e6e6f74206265207a65726f60781b604482015260640161057e565b60006113ec8585612aa4565b9250905060006113fb846106b2565b905061140c876001888688866119a7565b6003546001600160a01b03161561143f576114286002836132db565b60046000828254611439919061333d565b90915550505b6001546109dd90600160401b90046001600160a01b0316333089611ae7565b6001600160a01b0383166000908152600d60209081526040808320338452909152812054819060ff166114c25760405162461bcd60e51b815260206004820152600c60248201526b3737ba1037b832b930ba37b960a11b604482015260640161057e565b6114cd8585856115ec565b91509150935093915050565b6006546001146114fb5760405162461bcd60e51b815260040161057e9061324c565b6000600681905550336001600160a01b0316600860009054906101000a90046001600160a01b03166001600160a01b031663f77c47916040518163ffffffff1660e01b81526004016020604051808303816000875af1158015611562573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061158691906132fd565b6001600160a01b0316146115ac5760405162461bcd60e51b815260040161057e9061331a565b6003546001600160a01b0316156115c5576115c5612bc1565b600380546001600160a01b0319166001600160a01b03929092169190911790556001600655565b6001600160a01b0383166000908152600c6020908152604080832085845290915281208054600182018054600284018054868655928690559490945590929190806116685760405162461bcd60e51b815260206004820152600c60248201526b696e76616c6964206e6f746560a01b604482015260640161057e565b428111156116ab5760405162461bcd60e51b815260206004820152601060248201526f19585c9b1e481dda5d1a191c985dd85b60821b604482015260640161057e565b6000806116b66105a7565b915091506000806116c5610b13565b9092509050826116da886401000000006132ae565b6116e491906132db565b84896117346117006001600160401b038616600160401b61329b565b6117176001600160401b038816600160401b61329b565b61172590600160401b6132ae565b61172f91906132db565b612c53565b61173e91906132ae565b61174891906132db565b10156117e4576001546000975061177090600160401b90046001600160a01b03168a8a611d36565b600084611781600160401b8b6132ae565b61178b91906132db565b90506117978382612cfb565b604080518c8152602081018b90526001916001600160a01b038f16917f8595f614655883bce3496fde65b1ff62bb8b336cc93d72a91cd2f61f1566872f910160405180910390a35061186f565b600254600098506117ff906001600160a01b03168a89611d36565b600083611810600160401b8a6132ae565b61181a91906132db565b90506118268282612d48565b604080518c8152602081018a90526000916001600160a01b038f16917f8595f614655883bce3496fde65b1ff62bb8b336cc93d72a91cd2f61f1566872f910160405180910390a3505b505050505050935093915050565b600080600084116118c75760405162461bcd60e51b81526020600482015260146024820152731a5b9d985b1a59081a5b9c1d5d08185b5bdd5b9d60621b604482015260640161057e565b6000806118d26105a7565b915091506000806118e1610b13565b9092509050600160401b6118fe896001600160401b0384166132ae565b61190891906132db565b95506000611916878a61329b565b9050611922818561333d565b61192c86836132ae565b61193691906132db565b9550878610156119735760405162461bcd60e51b8152602060048201526008602482015267736c69707061676560c01b604482015260640161057e565b600085611984600160401b896132ae565b61198e91906132db565b905061199a8482612cfb565b5050505050509250929050565b6001600160a01b0386166000908152600b60205260408120805490826119cc83613376565b909155506001600160a01b0388166000908152600c60209081526040808320848452909152812091925087611a015785611a03565b865b90506000670de0b6b3a7640000611a1a818761333d565b611a24908a6132ae565b611a2e91906132db565b90506000670de0b6b3a7640000611a45818861333d565b611a4f908a6132ae565b611a5991906132db565b90506000611a67884261333d565b8386556001860183905560028601819055604080518881526020810187905290810185905260608101849052608081018290529091508b1515906001600160a01b038e16907f1a03e701f999967b189f59a5e5d6ddefdc9b644975d45bcf544d8755719a0bd79060a00160405180910390a3505050505050505050505050565b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180516001600160e01b03166323b872dd60e01b1790529151600092839290881691611b4b919061338f565b6000604051808303816000865af19150503d8060008114611b88576040519150601f19603f3d011682016040523d82523d6000602084013e611b8d565b606091505b5091509150818015611bb7575080511580611bb7575080806020019051810190611bb791906133be565b611c0f5760405162461bcd60e51b815260206004820152602360248201527f7472616e7366657248656c7065723a207472616e7366657246726f6d206661696044820152621b195960ea1b606482015260840161057e565b505050505050565b6009546001600160a01b031615611cbf576000670de0b6b3a764000082611c4161172f86886132ae565b611c4b91906132ae565b611c5591906132db565b6009546040516352edeea160e01b81526001600160a01b038881166004830152602482018490529293509116906352edeea190604401600060405180830381600087803b158015611ca557600080fd5b505af1158015611cb9573d6000803e3d6000fd5b50505050505b50505050565b600154600160401b90046001600160a01b031615611cf55760405162461bcd60e51b815260040161057e9061331a565b6001805468010000000000000000600160e01b031916600160401b6001600160a01b0394851602179055600280546001600160a01b03191691909216179055565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b1790529151600092839290871691611d92919061338f565b6000604051808303816000865af19150503d8060008114611dcf576040519150601f19603f3d011682016040523d82523d6000602084013e611dd4565b606091505b5091509150818015611dfe575080511580611dfe575080806020019051810190611dfe91906133be565b611e4a5760405162461bcd60e51b815260206004820152601f60248201527f7472616e7366657248656c7065723a207472616e73666572206661696c656400604482015260640161057e565b5050505050565b600081600003611e6057600080fd5b6000611e6c8484612da3565b905060016001607f1b036001600160801b0382161115611e8b57600080fd5b9392505050565b60006840000000000000000082600f0b12611eac57600080fd5b683fffffffffffffffff1982600f0b1215611ec957506000919050565b6001607f1b60006780000000000000008416600f0b1315611efb5770016a09e667f3bcc908b2fb1366ea957d3e0260801c5b60008367400000000000000016600f0b1315611f28577001306fe0a31b7152de8d5a46305c85edec0260801c5b60008367200000000000000016600f0b1315611f55577001172b83c7d517adcdf7c8c50eb14a791f0260801c5b60008367100000000000000016600f0b1315611f825770010b5586cf9890f6298b92b71842a983630260801c5b60008367080000000000000016600f0b1315611faf577001059b0d31585743ae7c548eb68ca417fd0260801c5b60008367040000000000000016600f0b1315611fdc57700102c9a3e778060ee6f7caca4f7a29bde80260801c5b60008367020000000000000016600f0b13156120095770010163da9fb33356d84a66ae336dcdfa3f0260801c5b60008367010000000000000016600f0b131561203657700100b1afa5abcbed6129ab13ec11dc95430260801c5b600083668000000000000016600f0b13156120625770010058c86da1c09ea1ff19d294cf2f679b0260801c5b600083664000000000000016600f0b131561208e577001002c605e2e8cec506d21bfc89a23a00f0260801c5b600083662000000000000016600f0b13156120ba57700100162f3904051fa128bca9c55c31e5df0260801c5b600083661000000000000016600f0b13156120e6577001000b175effdc76ba38e31671ca9397250260801c5b600083660800000000000016600f0b131561211257700100058ba01fb9f96d6cacd4b180917c3d0260801c5b600083660400000000000016600f0b131561213e5770010002c5cc37da9491d0985c348c68e7b30260801c5b600083660200000000000016600f0b131561216a577001000162e525ee054754457d59952920260260801c5b600083660100000000000016600f0b13156121965770010000b17255775c040618bf4a4ade83fc0260801c5b6000836580000000000016600f0b13156121c1577001000058b91b5bc9ae2eed81e9b7d4cfab0260801c5b6000836540000000000016600f0b13156121ec57700100002c5c89d5ec6ca4d7c8acc017b7c90260801c5b6000836520000000000016600f0b13156122175770010000162e43f4f831060e02d839a9d16d0260801c5b6000836510000000000016600f0b131561224257700100000b1721bcfc99d9f890ea069117630260801c5b6000836508000000000016600f0b131561226d5770010000058b90cf1e6d97f9ca14dbcc16280260801c5b6000836504000000000016600f0b1315612298577001000002c5c863b73f016468f6bac5ca2b0260801c5b6000836502000000000016600f0b13156122c357700100000162e430e5a18f6119e3c02282a50260801c5b6000836501000000000016600f0b13156122ee577001000000b1721835514b86e6d96efd1bfe0260801c5b60008364800000000016600f0b131561231857700100000058b90c0b48c6be5df846c5b2ef0260801c5b60008364400000000016600f0b13156123425770010000002c5c8601cc6b9e94213c72737a0260801c5b60008364200000000016600f0b131561236c577001000000162e42fff037df38aa2b219f060260801c5b60008364100000000016600f0b13156123965770010000000b17217fba9c739aa5819f44f90260801c5b60008364080000000016600f0b13156123c0577001000000058b90bfcdee5acd3c1cedc8230260801c5b60008364040000000016600f0b13156123ea57700100000002c5c85fe31f35a6a30da1be500260801c5b60008364020000000016600f0b13156124145770010000000162e42ff0999ce3541b9fffcf0260801c5b60008364010000000016600f0b131561243e57700100000000b17217f80f4ef5aadda455540260801c5b600083638000000016600f0b13156124675770010000000058b90bfbf8479bd5a81b51ad0260801c5b600083634000000016600f0b1315612490577001000000002c5c85fdf84bd62ae30a74cc0260801c5b600083632000000016600f0b13156124b957700100000000162e42fefb2fed257559bdaa0260801c5b600083631000000016600f0b13156124e2577001000000000b17217f7d5a7716bba4a9ae0260801c5b600083630800000016600f0b131561250b57700100000000058b90bfbe9ddbac5e109cce0260801c5b600083630400000016600f0b13156125345770010000000002c5c85fdf4b15de6f17eb0d0260801c5b600083630200000016600f0b131561255d577001000000000162e42fefa494f1478fde050260801c5b600083630100000016600f0b13156125865770010000000000b17217f7d20cf927c8e94c0260801c5b6000836280000016600f0b13156125ae577001000000000058b90bfbe8f71cb4e4b33d0260801c5b6000836240000016600f0b13156125d657700100000000002c5c85fdf477b662b269450260801c5b6000836220000016600f0b13156125fe5770010000000000162e42fefa3ae53369388c0260801c5b6000836210000016600f0b131561262657700100000000000b17217f7d1d351a389d400260801c5b6000836208000016600f0b131561264e5770010000000000058b90bfbe8e8b2d3d4ede0260801c5b6000836204000016600f0b1315612676577001000000000002c5c85fdf4741bea6e77e0260801c5b6000836202000016600f0b131561269e57700100000000000162e42fefa39fe95583c20260801c5b6000836201000016600f0b13156126c6577001000000000000b17217f7d1cfb72b45e10260801c5b60008361800016600f0b13156126ed57700100000000000058b90bfbe8e7cc35c3f00260801c5b60008361400016600f0b13156127145770010000000000002c5c85fdf473e242ea380260801c5b60008361200016600f0b131561273b577001000000000000162e42fefa39f02b772c0260801c5b60008361100016600f0b13156127625770010000000000000b17217f7d1cf7d83c1a0260801c5b60008361080016600f0b1315612789577001000000000000058b90bfbe8e7bdcbe2e0260801c5b60008361040016600f0b13156127b057700100000000000002c5c85fdf473dea871f0260801c5b60008361020016600f0b13156127d75770010000000000000162e42fefa39ef44d910260801c5b60008361010016600f0b13156127fe57700100000000000000b17217f7d1cf79e9490260801c5b600083608016600f0b13156128245770010000000000000058b90bfbe8e7bce5440260801c5b600083604016600f0b131561284a577001000000000000002c5c85fdf473de6eca0260801c5b600083602016600f0b131561287057700100000000000000162e42fefa39ef366f0260801c5b600083601016600f0b1315612896577001000000000000000b17217f7d1cf79afa0260801c5b600083600816600f0b13156128bc57700100000000000000058b90bfbe8e7bcd6d0260801c5b600083600416600f0b13156128e25770010000000000000002c5c85fdf473de6b20260801c5b600083600216600f0b1315612908577001000000000000000162e42fefa39ef3580260801c5b600083600116600f0b131561292e5770010000000000000000b17217f7d1cf79ab0260801c5b600f83810b60401d603f03900b1c60016001607f1b038111156106e657600080fd5b600081600003612962575060006106e6565b600083600f0b121561297357600080fd5b600f83900b6001600160801b038316810260401c90608084901c026001600160c01b038111156129a257600080fd5b60401b81198111156129b357600080fd5b019392505050565b60008151604103612a9c5760208201516040830151606084015160001a7f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0821115612a0c57600093505050506106e6565b8060ff16601b14158015612a2457508060ff16601c14155b15612a3557600093505050506106e6565b60408051600081526020810180835288905260ff831691810191909152606081018490526080810183905260019060a0016020604051602081039080840390855afa158015612a88573d6000803e3d6000fd5b5050506020604051035193505050506106e6565b5060006106e6565b60008060008411612aee5760405162461bcd60e51b81526020600482015260146024820152731a5b9d985b1a59081a5b9c1d5d08185b5bdd5b9d60621b604482015260640161057e565b600080612af96105a7565b91509150600080612b08610b13565b9092509050600160401b612b25896001600160401b0385166132ae565b612b2f91906132db565b95506000612b3d878a61329b565b9050612b49818661333d565b612b5385836132ae565b612b5d91906132db565b955087861015612b9a5760405162461bcd60e51b8152602060048201526008602482015267736c69707061676560c01b604482015260640161057e565b600084612bab600160401b896132ae565b612bb591906132db565b905061199a8382612d48565b6004805460058054600093849055929055600354600154919291612bf9916001600160a01b03600160401b9092048216911684611d36565b600354600254612c16916001600160a01b03918216911683611d36565b60408051838152602081018390527faf7c505ee772ec188af7067e1f73db08ab028e3d564273442b907742b9c41fa0910160405180910390a15050565b60b581600160881b8110612c6c5760409190911b9060801c5b69010000000000000000008110612c885760209190911b9060401c5b650100000000008110612ca05760109190911b9060201c5b63010000008110612cb65760089190911b9060101c5b62010000010260121c80820401600190811c80830401811c80830401811c80830401811c80830401811c80830401811c80830401901c80820481111561079c57900490565b612d058282612f08565b60008054426001600160401b03908116600160801b0277ffffffffffffffff0000000000000000ffffffffffffffff199092169316929092179190911790555050565b612d528282612f08565b6000805477ffffffffffffffff0000000000000000ffffffffffffffff16600160401b6001600160401b03938416026001600160c01b031617600160c01b4293909316929092029190911790555050565b600081600003612db257600080fd5b60006001600160c01b038411612ddd5782604085901b81612dd557612dd56132c5565b049050612ef4565b60c084811c6401000000008110612df6576020918201911c5b620100008110612e08576010918201911c5b6101008110612e19576008918201911c5b60108110612e29576004918201911c5b60048110612e39576002918201911c5b60028110612e48576001820191505b60bf820360018603901c6001018260ff0387901b81612e6957612e696132c5565b0492506001600160801b03831115612e8057600080fd5b608085901c83026001600160801b038616840260c088901c604089901b82811015612eac576001820391505b608084901b92900382811015612ec3576001820391505b829003608084901c8214612ed957612ed96133db565b888181612ee857612ee86132c5565b04870196505050505050505b6001600160801b03811115611e8b57600080fd5b60006001600160401b03808416908316600160401b612f2782846132ae565b612f3191906132db565b612f3b828461333d565b610bda919061329b565b6001600160a01b0381168114612f5a57600080fd5b50565b60008060408385031215612f7057600080fd5b823591506020830135612f8281612f45565b809150509250929050565b60008060408385031215612fa057600080fd5b8235612fab81612f45565b91506020830135612f8281612f45565b600060208284031215612fcd57600080fd5b5035919050565b80356001600160401b038116811461079c57600080fd5b600060208284031215612ffd57600080fd5b611e8b82612fd4565b6000806000806080858703121561301c57600080fd5b843561302781612f45565b966020860135965060408601359560600135945092505050565b60008060006060848603121561305657600080fd5b833561306181612f45565b95602085013595506040909401359392505050565b6000806040838503121561308957600080fd5b61309283612fd4565b946020939093013593505050565b8015158114612f5a57600080fd5b60008060008060008060a087890312156130c757600080fd5b86356130d281612f45565b955060208701356130e281612f45565b945060408701356130f2816130a0565b93506060870135925060808701356001600160401b038082111561311557600080fd5b818901915089601f83011261312957600080fd5b81358181111561313857600080fd5b8a602082850101111561314a57600080fd5b6020830194508093505050509295509295509295565b60006020828403121561317257600080fd5b8135611e8b81612f45565b6000806040838503121561319057600080fd5b823561319b81612f45565b91506020830135612f82816130a0565b6000806000606084860312156131c057600080fd5b83356131cb81612f45565b925060208401356131db81612f45565b929592945050506040919091013590565b600080604083850312156131ff57600080fd5b823561309281612f45565b60008060006060848603121561321f57600080fd5b833561322a81612f45565b925060208401359150604084013561324181612f45565b809150509250925092565b6020808252600690820152651b1bd8dad95960d21b604082015260600190565b60006020828403121561327e57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b818103818111156106e6576106e6613285565b80820281158282048414176106e6576106e6613285565b634e487b7160e01b600052601260045260246000fd5b6000826132f857634e487b7160e01b600052601260045260246000fd5b500490565b60006020828403121561330f57600080fd5b8151611e8b81612f45565b6020808252600990820152683337b93134b23232b760b91b604082015260600190565b808201808211156106e6576106e6613285565b600081600f0b60016001607f1b0319810361336d5761336d613285565b60000392915050565b60006001820161338857613388613285565b5060010190565b6000825160005b818110156133b05760208186018101518583015201613396565b506000920191825250919050565b6000602082840312156133d057600080fd5b8151611e8b816130a0565b634e487b7160e01b600052600160045260246000fdfea2646970667358221220ed6c7eb466c3ccf5dfb7c98666edd85d61cfc775f63eb0fbe97fd24566bcd50464736f6c63430008110033",
    "sourceMap": "9184:14090:23:-:0;;;799:28;;;-1:-1:-1;;;;;;799:28:23;824:3;799:28;;;4768:25;;10262:6;10242:26;;10972:441;;;;;;;;;-1:-1:-1;11273:13:23;;;;;;;;;;;-1:-1:-1;;;11273:13:23;;;;;11315:10;;;;;;;;;;-1:-1:-1;;;11315:10:23;;;;11122:274;;11150:95;11122:274;;;273:25:35;11263:24:23;314:18:35;;;307:34;11305:21:23;357:18:35;;;350:34;11052:9:23;400:18:35;;;;393:34;;;;11377:4:23;443:19:35;;;;436:61;;;;11122:274:23;;;;;;;;;;245:19:35;;;;11122:274:23;;;11099:307;;;;;11080:326;;;;9184:14090;;-1:-1:-1;9184:14090:23;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101ef5760003560e01c80637ecebe001161010f578063d4d5d32a116100a2578063e146141c11610071578063e146141c14610517578063e162402f1461052a578063f385cecb1461053d578063f46901ed1461054657600080fd5b8063d4d5d32a14610487578063d4f26c511461048f578063dc950d36146104a2578063e0b117ff146104c257600080fd5b8063b2118a8d116100de578063b2118a8d14610427578063c45a01551461043a578063c9f10f8c1461044d578063d21220a71461047457600080fd5b80637ecebe00146103ce5780637f568f18146103ee578063a22cb46514610401578063a9d9db4d1461041457600080fd5b80633644e5151161018757806359362b881161015657806359362b8814610355578063666093341461037d5780637b7e9fac146103a85780637bc90d1c146103bb57600080fd5b80633644e515146102f557806336e9332d1461031c578063485cc9551461032f57806353d56bf51461034257600080fd5b80630dfe1681116101c35780630dfe1681146102925780631bf1fffb146102ac57806322ff2a8e146102cd57806330d6618e146102e257600080fd5b8062f714ce146101f4578063017e7e58146102215780630902f1ac1461024c5780630d95e05414610254575b600080fd5b610207610202366004612f5d565b610559565b604080519283526020830191909152015b60405180910390f35b600354610234906001600160a01b031681565b6040516001600160a01b039091168152602001610218565b6102076105a7565b610282610262366004612f8d565b600d60209081526000928352604080842090915290825290205460ff1681565b6040519015158152602001610218565b60015461023490600160401b90046001600160a01b031681565b6102bf6102ba366004612fbb565b6106b2565b604051908152602001610218565b6102e06102db366004612feb565b6107a1565b005b6102bf6102f0366004613006565b6108f3565b6102bf7f000000000000000000000000000000000000000000000000000000000000000081565b600954610234906001600160a01b031681565b6102e061033d366004612f8d565b6109f8565b6102bf610350366004613041565b610a18565b61035d610b13565b604080516001600160401b03938416815292909116602083015201610218565b61039061038b366004613076565b610b8d565b6040516001600160401b039091168152602001610218565b6102e06103b63660046130ae565b610be3565b600154610390906001600160401b031681565b6102bf6103dc366004613160565b60076020526000908152604090205481565b6102e06103fc366004612fbb565b610ecf565b6102e061040f36600461317d565b610fac565b6102bf610422366004613041565b611068565b6102e06104353660046131ab565b611152565b600854610234906001600160a01b031681565b6102bf7fd7db667cdba90ca333b850481afd8f802dc1081fc1d7ee77ee75ae69468a0b1781565b600254610234906001600160a01b031681565b6102e061123d565b6102e061049d366004613160565b611273565b6102bf6104b0366004613160565b600b6020526000908152604090205481565b6104fc6104d03660046131ec565b600c60209081526000928352604080842090915290825290208054600182015460029092015490919083565b60408051938452602084019290925290820152606001610218565b6102bf610525366004613006565b61136d565b61020761053836600461320a565b61145e565b6102bf600a5481565b6102e0610554366004613160565b6114d9565b6000806006546001146105875760405162461bcd60e51b815260040161057e9061324c565b60405180910390fd5b60006006556105973385856115ec565b6001600655909590945092505050565b600480546001546040516370a0823160e01b81523093810193909352600092839291600160401b90046001600160a01b0316906370a0823190602401602060405180830381865afa158015610600573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610624919061326c565b61062e919061329b565b6005546002546040516370a0823160e01b815230600482015292945090916001600160a01b03909116906370a0823190602401602060405180830381865afa15801561067e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106a2919061326c565b6106ac919061329b565b90509091565b60008162015180036106ec57670de0b6b3a7640000600a54664a620d26ead0e46106dc91906132ae565b6106e691906132db565b92915050565b816203f4800361071457670de0b6b3a7640000600a546680d5cceb1376a86106dc91906132ae565b8162093a800361073c57670de0b6b3a7640000600a5466c4cc884ac66cf86106dc91906132ae565b8162278d000361076557670de0b6b3a7640000600a54670197699c5ceeb4006106dc91906132ae565b60405162461bcd60e51b815260206004820152600c60248201526b696e76616c69642074696d6560a01b604482015260640161057e565b919050565b6006546001146107c35760405162461bcd60e51b815260040161057e9061324c565b6000600681905550336001600160a01b0316600860009054906101000a90046001600160a01b03166001600160a01b031663f77c47916040518163ffffffff1660e01b81526004016020604051808303816000875af115801561082a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061084e91906132fd565b6001600160a01b0316146108745760405162461bcd60e51b815260040161057e9061331a565b6000816001600160401b0316116108cd5760405162461bcd60e51b815260206004820152601860248201527f68616c66206c6966652063616e6e6f74206265207a65726f0000000000000000604482015260640161057e565b6001805467ffffffffffffffff19166001600160401b0392909216919091178155600655565b60006006546001146109175760405162461bcd60e51b815260040161057e9061324c565b60006006556001600160a01b0385166109665760405162461bcd60e51b8152602060048201526011602482015270746f2063616e6e6f74206265207a65726f60781b604482015260640161057e565b6000610972858561187d565b925090506000610981846106b2565b9050610992876000858988866119a7565b6003546001600160a01b0316156109c5576109ae6002836132db565b600560008282546109bf919061333d565b90915550505b6002546109dd906001600160a01b0316333089611ae7565b6109e987878584611c17565b50506001600655949350505050565b610a028282611cc5565b5050600880546001600160a01b03191633179055565b6000600654600114610a3c5760405162461bcd60e51b815260040161057e9061324c565b60006006819055610a4d848461187d565b6003549093509091506001600160a01b031615610a8657610a6f6002826132db565b60056000828254610a80919061333d565b90915550505b600254610a9e906001600160a01b0316333087611ae7565b600154610abc90600160401b90046001600160a01b03168684611d36565b60408051858152602081018490526001600160a01b0387169160009133917f66251e495e6e69e208ab08e2bc259dbe2ef482a8c4a93b8984b03a1eb27e1b9e91015b60405180910390a45060016006559392505050565b600080600080610b4b6000546001600160401b0380821692600160401b8304821692600160801b8104831692600160c01b9091041690565b92965090945092509050610b6c8461038b6001600160401b0385164261329b565b9350610b858361038b6001600160401b0384164261329b565b925050509091565b6001546000908190610ba99084906001600160401b0316611e51565b90506000610bc1610bb983613350565b600f0b611e92565b9050610bda600f82900b6001600160401b038716612950565b95945050505050565b8242111580610bf0575082155b610c2e5760405162461bcd60e51b815260206004820152600f60248201526e65786365656420646561646c696e6560881b604482015260640161057e565b6001600160a01b038616610c7b5760405162461bcd60e51b81526020600482015260146024820152736f776e65722063616e6e6f74206265207a65726f60601b604482015260640161057e565b6001600160a01b038516610ccb5760405162461bcd60e51b81526020600482015260176024820152766f70657261746f722063616e6e6f74206265207a65726f60481b604482015260640161057e565b6001600160a01b038616600090815260076020526040812080547fd7db667cdba90ca333b850481afd8f802dc1081fc1d7ee77ee75ae69468a0b17918991899189919086610d1883613376565b909155506040805160208101969096526001600160a01b03948516908601529290911660608401521515608083015260a082015260c0810185905260e00160408051601f1981840301815290829052805160209182012061190160f01b918301919091527f00000000000000000000000000000000000000000000000000000000000000006022830152604282018190529150600090606201604051602081830303815290604052805190602001209050610e098185858080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506129bb92505050565b6001600160a01b0316886001600160a01b031614610e5d5760405162461bcd60e51b8152602060048201526011602482015270696e76616c6964207369676e617475726560781b604482015260640161057e565b6001600160a01b038881166000818152600d60209081526040808320948c1680845294825291829020805460ff19168b151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050505050505050565b600654600114610ef15760405162461bcd60e51b815260040161057e9061324c565b6000600681905550336001600160a01b0316600860009054906101000a90046001600160a01b03166001600160a01b031663f77c47916040518163ffffffff1660e01b81526004016020604051808303816000875af1158015610f58573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f7c91906132fd565b6001600160a01b031614610fa25760405162461bcd60e51b815260040161057e9061331a565b600a556001600655565b6001600160a01b038216610ffc5760405162461bcd60e51b81526020600482015260176024820152766f70657261746f722063616e6e6f74206265207a65726f60481b604482015260640161057e565b336000818152600d602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b600060065460011461108c5760405162461bcd60e51b815260040161057e9061324c565b6000600681905561109d8484612aa4565b6003549093509091506001600160a01b0316156110d6576110bf6002826132db565b600460008282546110d0919061333d565b90915550505b6001546110f590600160401b90046001600160a01b0316333087611ae7565b60025461110c906001600160a01b03168684611d36565b60408051858152602081018490526001600160a01b0387169160019133917f66251e495e6e69e208ab08e2bc259dbe2ef482a8c4a93b8984b03a1eb27e1b9e9101610afe565b6008546040805163f77c479160e01b8152905133926001600160a01b03169163f77c479191600480830192602092919082900301816000875af115801561119d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111c191906132fd565b6001600160a01b0316146111e75760405162461bcd60e51b815260040161057e9061331a565b6001546001600160a01b03600160401b90910481169084160361120957600080fd5b6002546001600160a01b039081169084160361122457600080fd5b6112386001600160a01b0384168383611d36565b505050565b60065460011461125f5760405162461bcd60e51b815260040161057e9061324c565b600060065561126c612bc1565b6001600655565b6006546001146112955760405162461bcd60e51b815260040161057e9061324c565b6000600681905550336001600160a01b0316600860009054906101000a90046001600160a01b03166001600160a01b031663f77c47916040518163ffffffff1660e01b81526004016020604051808303816000875af11580156112fc573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061132091906132fd565b6001600160a01b0316146113465760405162461bcd60e51b815260040161057e9061331a565b600980546001600160a01b0319166001600160a01b03929092169190911790556001600655565b60006006546001146113915760405162461bcd60e51b815260040161057e9061324c565b60006006556001600160a01b0385166113e05760405162461bcd60e51b8152602060048201526011602482015270746f2063616e6e6f74206265207a65726f60781b604482015260640161057e565b60006113ec8585612aa4565b9250905060006113fb846106b2565b905061140c876001888688866119a7565b6003546001600160a01b03161561143f576114286002836132db565b60046000828254611439919061333d565b90915550505b6001546109dd90600160401b90046001600160a01b0316333089611ae7565b6001600160a01b0383166000908152600d60209081526040808320338452909152812054819060ff166114c25760405162461bcd60e51b815260206004820152600c60248201526b3737ba1037b832b930ba37b960a11b604482015260640161057e565b6114cd8585856115ec565b91509150935093915050565b6006546001146114fb5760405162461bcd60e51b815260040161057e9061324c565b6000600681905550336001600160a01b0316600860009054906101000a90046001600160a01b03166001600160a01b031663f77c47916040518163ffffffff1660e01b81526004016020604051808303816000875af1158015611562573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061158691906132fd565b6001600160a01b0316146115ac5760405162461bcd60e51b815260040161057e9061331a565b6003546001600160a01b0316156115c5576115c5612bc1565b600380546001600160a01b0319166001600160a01b03929092169190911790556001600655565b6001600160a01b0383166000908152600c6020908152604080832085845290915281208054600182018054600284018054868655928690559490945590929190806116685760405162461bcd60e51b815260206004820152600c60248201526b696e76616c6964206e6f746560a01b604482015260640161057e565b428111156116ab5760405162461bcd60e51b815260206004820152601060248201526f19585c9b1e481dda5d1a191c985dd85b60821b604482015260640161057e565b6000806116b66105a7565b915091506000806116c5610b13565b9092509050826116da886401000000006132ae565b6116e491906132db565b84896117346117006001600160401b038616600160401b61329b565b6117176001600160401b038816600160401b61329b565b61172590600160401b6132ae565b61172f91906132db565b612c53565b61173e91906132ae565b61174891906132db565b10156117e4576001546000975061177090600160401b90046001600160a01b03168a8a611d36565b600084611781600160401b8b6132ae565b61178b91906132db565b90506117978382612cfb565b604080518c8152602081018b90526001916001600160a01b038f16917f8595f614655883bce3496fde65b1ff62bb8b336cc93d72a91cd2f61f1566872f910160405180910390a35061186f565b600254600098506117ff906001600160a01b03168a89611d36565b600083611810600160401b8a6132ae565b61181a91906132db565b90506118268282612d48565b604080518c8152602081018a90526000916001600160a01b038f16917f8595f614655883bce3496fde65b1ff62bb8b336cc93d72a91cd2f61f1566872f910160405180910390a3505b505050505050935093915050565b600080600084116118c75760405162461bcd60e51b81526020600482015260146024820152731a5b9d985b1a59081a5b9c1d5d08185b5bdd5b9d60621b604482015260640161057e565b6000806118d26105a7565b915091506000806118e1610b13565b9092509050600160401b6118fe896001600160401b0384166132ae565b61190891906132db565b95506000611916878a61329b565b9050611922818561333d565b61192c86836132ae565b61193691906132db565b9550878610156119735760405162461bcd60e51b8152602060048201526008602482015267736c69707061676560c01b604482015260640161057e565b600085611984600160401b896132ae565b61198e91906132db565b905061199a8482612cfb565b5050505050509250929050565b6001600160a01b0386166000908152600b60205260408120805490826119cc83613376565b909155506001600160a01b0388166000908152600c60209081526040808320848452909152812091925087611a015785611a03565b865b90506000670de0b6b3a7640000611a1a818761333d565b611a24908a6132ae565b611a2e91906132db565b90506000670de0b6b3a7640000611a45818861333d565b611a4f908a6132ae565b611a5991906132db565b90506000611a67884261333d565b8386556001860183905560028601819055604080518881526020810187905290810185905260608101849052608081018290529091508b1515906001600160a01b038e16907f1a03e701f999967b189f59a5e5d6ddefdc9b644975d45bcf544d8755719a0bd79060a00160405180910390a3505050505050505050505050565b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180516001600160e01b03166323b872dd60e01b1790529151600092839290881691611b4b919061338f565b6000604051808303816000865af19150503d8060008114611b88576040519150601f19603f3d011682016040523d82523d6000602084013e611b8d565b606091505b5091509150818015611bb7575080511580611bb7575080806020019051810190611bb791906133be565b611c0f5760405162461bcd60e51b815260206004820152602360248201527f7472616e7366657248656c7065723a207472616e7366657246726f6d206661696044820152621b195960ea1b606482015260840161057e565b505050505050565b6009546001600160a01b031615611cbf576000670de0b6b3a764000082611c4161172f86886132ae565b611c4b91906132ae565b611c5591906132db565b6009546040516352edeea160e01b81526001600160a01b038881166004830152602482018490529293509116906352edeea190604401600060405180830381600087803b158015611ca557600080fd5b505af1158015611cb9573d6000803e3d6000fd5b50505050505b50505050565b600154600160401b90046001600160a01b031615611cf55760405162461bcd60e51b815260040161057e9061331a565b6001805468010000000000000000600160e01b031916600160401b6001600160a01b0394851602179055600280546001600160a01b03191691909216179055565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b1790529151600092839290871691611d92919061338f565b6000604051808303816000865af19150503d8060008114611dcf576040519150601f19603f3d011682016040523d82523d6000602084013e611dd4565b606091505b5091509150818015611dfe575080511580611dfe575080806020019051810190611dfe91906133be565b611e4a5760405162461bcd60e51b815260206004820152601f60248201527f7472616e7366657248656c7065723a207472616e73666572206661696c656400604482015260640161057e565b5050505050565b600081600003611e6057600080fd5b6000611e6c8484612da3565b905060016001607f1b036001600160801b0382161115611e8b57600080fd5b9392505050565b60006840000000000000000082600f0b12611eac57600080fd5b683fffffffffffffffff1982600f0b1215611ec957506000919050565b6001607f1b60006780000000000000008416600f0b1315611efb5770016a09e667f3bcc908b2fb1366ea957d3e0260801c5b60008367400000000000000016600f0b1315611f28577001306fe0a31b7152de8d5a46305c85edec0260801c5b60008367200000000000000016600f0b1315611f55577001172b83c7d517adcdf7c8c50eb14a791f0260801c5b60008367100000000000000016600f0b1315611f825770010b5586cf9890f6298b92b71842a983630260801c5b60008367080000000000000016600f0b1315611faf577001059b0d31585743ae7c548eb68ca417fd0260801c5b60008367040000000000000016600f0b1315611fdc57700102c9a3e778060ee6f7caca4f7a29bde80260801c5b60008367020000000000000016600f0b13156120095770010163da9fb33356d84a66ae336dcdfa3f0260801c5b60008367010000000000000016600f0b131561203657700100b1afa5abcbed6129ab13ec11dc95430260801c5b600083668000000000000016600f0b13156120625770010058c86da1c09ea1ff19d294cf2f679b0260801c5b600083664000000000000016600f0b131561208e577001002c605e2e8cec506d21bfc89a23a00f0260801c5b600083662000000000000016600f0b13156120ba57700100162f3904051fa128bca9c55c31e5df0260801c5b600083661000000000000016600f0b13156120e6577001000b175effdc76ba38e31671ca9397250260801c5b600083660800000000000016600f0b131561211257700100058ba01fb9f96d6cacd4b180917c3d0260801c5b600083660400000000000016600f0b131561213e5770010002c5cc37da9491d0985c348c68e7b30260801c5b600083660200000000000016600f0b131561216a577001000162e525ee054754457d59952920260260801c5b600083660100000000000016600f0b13156121965770010000b17255775c040618bf4a4ade83fc0260801c5b6000836580000000000016600f0b13156121c1577001000058b91b5bc9ae2eed81e9b7d4cfab0260801c5b6000836540000000000016600f0b13156121ec57700100002c5c89d5ec6ca4d7c8acc017b7c90260801c5b6000836520000000000016600f0b13156122175770010000162e43f4f831060e02d839a9d16d0260801c5b6000836510000000000016600f0b131561224257700100000b1721bcfc99d9f890ea069117630260801c5b6000836508000000000016600f0b131561226d5770010000058b90cf1e6d97f9ca14dbcc16280260801c5b6000836504000000000016600f0b1315612298577001000002c5c863b73f016468f6bac5ca2b0260801c5b6000836502000000000016600f0b13156122c357700100000162e430e5a18f6119e3c02282a50260801c5b6000836501000000000016600f0b13156122ee577001000000b1721835514b86e6d96efd1bfe0260801c5b60008364800000000016600f0b131561231857700100000058b90c0b48c6be5df846c5b2ef0260801c5b60008364400000000016600f0b13156123425770010000002c5c8601cc6b9e94213c72737a0260801c5b60008364200000000016600f0b131561236c577001000000162e42fff037df38aa2b219f060260801c5b60008364100000000016600f0b13156123965770010000000b17217fba9c739aa5819f44f90260801c5b60008364080000000016600f0b13156123c0577001000000058b90bfcdee5acd3c1cedc8230260801c5b60008364040000000016600f0b13156123ea57700100000002c5c85fe31f35a6a30da1be500260801c5b60008364020000000016600f0b13156124145770010000000162e42ff0999ce3541b9fffcf0260801c5b60008364010000000016600f0b131561243e57700100000000b17217f80f4ef5aadda455540260801c5b600083638000000016600f0b13156124675770010000000058b90bfbf8479bd5a81b51ad0260801c5b600083634000000016600f0b1315612490577001000000002c5c85fdf84bd62ae30a74cc0260801c5b600083632000000016600f0b13156124b957700100000000162e42fefb2fed257559bdaa0260801c5b600083631000000016600f0b13156124e2577001000000000b17217f7d5a7716bba4a9ae0260801c5b600083630800000016600f0b131561250b57700100000000058b90bfbe9ddbac5e109cce0260801c5b600083630400000016600f0b13156125345770010000000002c5c85fdf4b15de6f17eb0d0260801c5b600083630200000016600f0b131561255d577001000000000162e42fefa494f1478fde050260801c5b600083630100000016600f0b13156125865770010000000000b17217f7d20cf927c8e94c0260801c5b6000836280000016600f0b13156125ae577001000000000058b90bfbe8f71cb4e4b33d0260801c5b6000836240000016600f0b13156125d657700100000000002c5c85fdf477b662b269450260801c5b6000836220000016600f0b13156125fe5770010000000000162e42fefa3ae53369388c0260801c5b6000836210000016600f0b131561262657700100000000000b17217f7d1d351a389d400260801c5b6000836208000016600f0b131561264e5770010000000000058b90bfbe8e8b2d3d4ede0260801c5b6000836204000016600f0b1315612676577001000000000002c5c85fdf4741bea6e77e0260801c5b6000836202000016600f0b131561269e57700100000000000162e42fefa39fe95583c20260801c5b6000836201000016600f0b13156126c6577001000000000000b17217f7d1cfb72b45e10260801c5b60008361800016600f0b13156126ed57700100000000000058b90bfbe8e7cc35c3f00260801c5b60008361400016600f0b13156127145770010000000000002c5c85fdf473e242ea380260801c5b60008361200016600f0b131561273b577001000000000000162e42fefa39f02b772c0260801c5b60008361100016600f0b13156127625770010000000000000b17217f7d1cf7d83c1a0260801c5b60008361080016600f0b1315612789577001000000000000058b90bfbe8e7bdcbe2e0260801c5b60008361040016600f0b13156127b057700100000000000002c5c85fdf473dea871f0260801c5b60008361020016600f0b13156127d75770010000000000000162e42fefa39ef44d910260801c5b60008361010016600f0b13156127fe57700100000000000000b17217f7d1cf79e9490260801c5b600083608016600f0b13156128245770010000000000000058b90bfbe8e7bce5440260801c5b600083604016600f0b131561284a577001000000000000002c5c85fdf473de6eca0260801c5b600083602016600f0b131561287057700100000000000000162e42fefa39ef366f0260801c5b600083601016600f0b1315612896577001000000000000000b17217f7d1cf79afa0260801c5b600083600816600f0b13156128bc57700100000000000000058b90bfbe8e7bcd6d0260801c5b600083600416600f0b13156128e25770010000000000000002c5c85fdf473de6b20260801c5b600083600216600f0b1315612908577001000000000000000162e42fefa39ef3580260801c5b600083600116600f0b131561292e5770010000000000000000b17217f7d1cf79ab0260801c5b600f83810b60401d603f03900b1c60016001607f1b038111156106e657600080fd5b600081600003612962575060006106e6565b600083600f0b121561297357600080fd5b600f83900b6001600160801b038316810260401c90608084901c026001600160c01b038111156129a257600080fd5b60401b81198111156129b357600080fd5b019392505050565b60008151604103612a9c5760208201516040830151606084015160001a7f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0821115612a0c57600093505050506106e6565b8060ff16601b14158015612a2457508060ff16601c14155b15612a3557600093505050506106e6565b60408051600081526020810180835288905260ff831691810191909152606081018490526080810183905260019060a0016020604051602081039080840390855afa158015612a88573d6000803e3d6000fd5b5050506020604051035193505050506106e6565b5060006106e6565b60008060008411612aee5760405162461bcd60e51b81526020600482015260146024820152731a5b9d985b1a59081a5b9c1d5d08185b5bdd5b9d60621b604482015260640161057e565b600080612af96105a7565b91509150600080612b08610b13565b9092509050600160401b612b25896001600160401b0385166132ae565b612b2f91906132db565b95506000612b3d878a61329b565b9050612b49818661333d565b612b5385836132ae565b612b5d91906132db565b955087861015612b9a5760405162461bcd60e51b8152602060048201526008602482015267736c69707061676560c01b604482015260640161057e565b600084612bab600160401b896132ae565b612bb591906132db565b905061199a8382612d48565b6004805460058054600093849055929055600354600154919291612bf9916001600160a01b03600160401b9092048216911684611d36565b600354600254612c16916001600160a01b03918216911683611d36565b60408051838152602081018390527faf7c505ee772ec188af7067e1f73db08ab028e3d564273442b907742b9c41fa0910160405180910390a15050565b60b581600160881b8110612c6c5760409190911b9060801c5b69010000000000000000008110612c885760209190911b9060401c5b650100000000008110612ca05760109190911b9060201c5b63010000008110612cb65760089190911b9060101c5b62010000010260121c80820401600190811c80830401811c80830401811c80830401811c80830401811c80830401811c80830401901c80820481111561079c57900490565b612d058282612f08565b60008054426001600160401b03908116600160801b0277ffffffffffffffff0000000000000000ffffffffffffffff199092169316929092179190911790555050565b612d528282612f08565b6000805477ffffffffffffffff0000000000000000ffffffffffffffff16600160401b6001600160401b03938416026001600160c01b031617600160c01b4293909316929092029190911790555050565b600081600003612db257600080fd5b60006001600160c01b038411612ddd5782604085901b81612dd557612dd56132c5565b049050612ef4565b60c084811c6401000000008110612df6576020918201911c5b620100008110612e08576010918201911c5b6101008110612e19576008918201911c5b60108110612e29576004918201911c5b60048110612e39576002918201911c5b60028110612e48576001820191505b60bf820360018603901c6001018260ff0387901b81612e6957612e696132c5565b0492506001600160801b03831115612e8057600080fd5b608085901c83026001600160801b038616840260c088901c604089901b82811015612eac576001820391505b608084901b92900382811015612ec3576001820391505b829003608084901c8214612ed957612ed96133db565b888181612ee857612ee86132c5565b04870196505050505050505b6001600160801b03811115611e8b57600080fd5b60006001600160401b03808416908316600160401b612f2782846132ae565b612f3191906132db565b612f3b828461333d565b610bda919061329b565b6001600160a01b0381168114612f5a57600080fd5b50565b60008060408385031215612f7057600080fd5b823591506020830135612f8281612f45565b809150509250929050565b60008060408385031215612fa057600080fd5b8235612fab81612f45565b91506020830135612f8281612f45565b600060208284031215612fcd57600080fd5b5035919050565b80356001600160401b038116811461079c57600080fd5b600060208284031215612ffd57600080fd5b611e8b82612fd4565b6000806000806080858703121561301c57600080fd5b843561302781612f45565b966020860135965060408601359560600135945092505050565b60008060006060848603121561305657600080fd5b833561306181612f45565b95602085013595506040909401359392505050565b6000806040838503121561308957600080fd5b61309283612fd4565b946020939093013593505050565b8015158114612f5a57600080fd5b60008060008060008060a087890312156130c757600080fd5b86356130d281612f45565b955060208701356130e281612f45565b945060408701356130f2816130a0565b93506060870135925060808701356001600160401b038082111561311557600080fd5b818901915089601f83011261312957600080fd5b81358181111561313857600080fd5b8a602082850101111561314a57600080fd5b6020830194508093505050509295509295509295565b60006020828403121561317257600080fd5b8135611e8b81612f45565b6000806040838503121561319057600080fd5b823561319b81612f45565b91506020830135612f82816130a0565b6000806000606084860312156131c057600080fd5b83356131cb81612f45565b925060208401356131db81612f45565b929592945050506040919091013590565b600080604083850312156131ff57600080fd5b823561309281612f45565b60008060006060848603121561321f57600080fd5b833561322a81612f45565b925060208401359150604084013561324181612f45565b809150509250925092565b6020808252600690820152651b1bd8dad95960d21b604082015260600190565b60006020828403121561327e57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b818103818111156106e6576106e6613285565b80820281158282048414176106e6576106e6613285565b634e487b7160e01b600052601260045260246000fd5b6000826132f857634e487b7160e01b600052601260045260246000fd5b500490565b60006020828403121561330f57600080fd5b8151611e8b81612f45565b6020808252600990820152683337b93134b23232b760b91b604082015260600190565b808201808211156106e6576106e6613285565b600081600f0b60016001607f1b0319810361336d5761336d613285565b60000392915050565b60006001820161338857613388613285565b5060010190565b6000825160005b818110156133b05760208186018101518583015201613396565b506000920191825250919050565b6000602082840312156133d057600080fd5b8151611e8b816130a0565b634e487b7160e01b600052600160045260246000fdfea2646970667358221220ed6c7eb466c3ccf5dfb7c98666edd85d61cfc775f63eb0fbe97fd24566bcd50464736f6c63430008110033",
    "sourceMap": "9184:14090:23:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20168:153;;;;;;:::i;:::-;;:::i;:::-;;;;644:25:35;;;700:2;685:18;;678:34;;;;617:18;20168:153:23;;;;;;;;4469:20;;;;;-1:-1:-1;;;;;4469:20:23;;;;;;-1:-1:-1;;;;;887:32:35;;;869:51;;857:2;842:18;4469:20:23;723:203:35;5367:237:23;;;:::i;10579:69::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1489:14:35;;1482:22;1464:41;;1452:2;1437:18;10579:69:23;1324:187:35;4385:21:23;;;;;-1:-1:-1;;;4385:21:23;;-1:-1:-1;;;;;4385:21:23;;;11738:463;;;;;;:::i;:::-;;:::i;:::-;;;1847:25:35;;;1835:2;1820:18;11738:463:23;1701:177:35;12709:227:23;;;;;;:::i;:::-;;:::i;:::-;;17035:513;;;;;;:::i;:::-;;:::i;9525:41::-;;;;;10103:17;;;;;-1:-1:-1;;;;;10103:17:23;;;12207:151;;;;;;:::i;:::-;;:::i;8394:395::-;;;;;;:::i;:::-;;:::i;3815:432::-;;;:::i;:::-;;;;-1:-1:-1;;;;;3723:15:35;;;3705:34;;3775:15;;;;3770:2;3755:18;;3748:43;3641:18;3815:432:23;3498:299:35;3332:254:23;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;4221:31:35;;;4203:50;;4191:2;4176:18;3332:254:23;4059:200:35;22063:757:23;;;;;;:::i;:::-;;:::i;799:28::-;;;;;-1:-1:-1;;;;;799:28:23;;;4837:41;;;;;;:::i;:::-;;;;;;;;;;;;;;12456:152;;;;;;:::i;:::-;;:::i;23006:266::-;;;;;;:::i;:::-;;:::i;7626:394::-;;;;;;:::i;:::-;;:::i;13712:292::-;;;;;;:::i;:::-;;:::i;10075:22::-;;;;;-1:-1:-1;;;;;10075:22:23;;;9572:157;;9615:114;9572:157;;4412:21;;;;;-1:-1:-1;;;;;4412:21:23;;;8795:66;;;:::i;13033:158::-;;;;;;:::i;:::-;;:::i;10329:41::-;;;;;;:::i;:::-;;;;;;;;;;;;;;10438:54;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7086:25:35;;;7142:2;7127:18;;7120:34;;;;7170:18;;;7163:34;7074:2;7059:18;10438:54:23;6884:319:35;15769:512:23;;;;;;:::i;:::-;;:::i;20688:218::-;;;;;;:::i;:::-;;:::i;10242:26::-;;;;;;13289:202;;;;;;:::i;:::-;;:::i;20168:153::-;20233:14;20249;5089:8;;5101:1;5089:13;5081:32;;;;-1:-1:-1;;;5081:32:23;;;;;;;:::i;:::-;;;;;;;;;5134:1;5123:8;:12;20282:32:::1;20292:10;20304:5:::0;20311:2;20282:9:::1;:32::i;:::-;5167:1:::0;5156:8;:12;20275:39;;;;-1:-1:-1;20168:153:23;-1:-1:-1;;;20168:153:23:o;5367:237::-;5504:15;;;5469:6;;5462:39;;-1:-1:-1;;;5462:39:23;;5495:4;5462:39;;;869:51:35;;;;5411:13:23;;;;5504:15;-1:-1:-1;;;5469:6:23;;-1:-1:-1;;;;;5469:6:23;;5462:24;;842:18:35;;5462:39:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:57;;;;:::i;:::-;5582:15;;5547:6;;5540:39;;-1:-1:-1;;;5540:39:23;;5573:4;5540:39;;;869:51:35;5451:68:23;;-1:-1:-1;5582:15:23;;-1:-1:-1;;;;;5547:6:23;;;;5540:24;;842:18:35;;5540:39:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:57;;;;:::i;:::-;5529:68;;5367:237;;:::o;11738:463::-;11790:12;11817:4;11825:6;11817:14;11814:380;;9491:4;11843:5;;11851:17;11843:25;;;;:::i;:::-;:45;;;;:::i;:::-;11833:55;11738:463;-1:-1:-1;;11738:463:23:o;11814:380::-;11906:4;11914:6;11906:14;11903:291;;9491:4;11932:5;;11940:17;11932:25;;;;:::i;11903:291::-;11995:4;12003:6;11995:14;11992:202;;9491:4;12021:5;;12029:17;12021:25;;;;:::i;11992:202::-;12084:4;12092:7;12084:15;12081:113;;9491:4;12111:5;;12119:18;12111:26;;;;:::i;12081:113::-;12172:22;;-1:-1:-1;;;12172:22:23;;9186:2:35;12172:22:23;;;9168:21:35;9225:2;9205:18;;;9198:30;-1:-1:-1;;;9244:18:35;;;9237:42;9296:18;;12172:22:23;8984:336:35;12081:113:23;11738:463;;;:::o;12709:227::-;5089:8;;5101:1;5089:13;5081:32;;;;-1:-1:-1;;;5081:32:23;;;;;;;:::i;:::-;5134:1;5123:8;:12;;;;12814:10:::1;-1:-1:-1::0;;;;;12780:44:23::1;12789:7;;;;;;;;;-1:-1:-1::0;;;;;12789:7:23::1;-1:-1:-1::0;;;;;12780:28:23::1;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;12780:44:23::1;;12772:66;;;;-1:-1:-1::0;;;12772:66:23::1;;;;;;;:::i;:::-;12869:1;12857:9;-1:-1:-1::0;;;;;12857:13:23::1;;12848:51;;;::::0;-1:-1:-1;;;12848:51:23;;10120:2:35;12848:51:23::1;::::0;::::1;10102:21:35::0;10159:2;10139:18;;;10132:30;10198:26;10178:18;;;10171:54;10242:18;;12848:51:23::1;9918:348:35::0;12848:51:23::1;12909:8;:20:::0;;-1:-1:-1;;12909:20:23::1;-1:-1:-1::0;;;;;12909:20:23;;;::::1;::::0;;;::::1;::::0;;5156:8;:12;12709:227::o;17035:513::-;17127:11;5089:8;;5101:1;5089:13;5081:32;;;;-1:-1:-1;;;5081:32:23;;;;;;;:::i;:::-;5134:1;5123:8;:12;-1:-1:-1;;;;;17158:16:23;::::1;17150:46;;;::::0;-1:-1:-1;;;17150:46:23;;10473:2:35;17150:46:23::1;::::0;::::1;10455:21:35::0;10512:2;10492:18;;;10485:30;-1:-1:-1;;;10531:18:35;;;10524:47;10588:18;;17150:46:23::1;10271:341:35::0;17150:46:23::1;17206:8;17240:26;17249:5;17256:9;17240:8;:26::i;:::-;17224:42:::0;-1:-1:-1;17224:42:23;-1:-1:-1;17276:12:23::1;17291:16;17302:4:::0;17291:10:::1;:16::i;:::-;17276:31;;17318:49;17327:2;17331:5;17338:6;17346:5;17353:4;17359:7;17318:8;:49::i;:::-;17381:5;::::0;-1:-1:-1;;;;;17381:5:23::1;:19:::0;17378:50:::1;;17421:7;17427:1;17421:3:::0;:7:::1;:::i;:::-;17402:15;;:26;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;17378:50:23::1;17438:6;::::0;:57:::1;::::0;-1:-1:-1;;;;;17438:6:23::1;17462:10;17482:4;17489:5:::0;17438:23:::1;:57::i;:::-;17505:36;17514:2;17518:5;17525:6;17533:7;17505:8;:36::i;:::-;-1:-1:-1::0;;5167:1:23;5156:8;:12;17035:513;;-1:-1:-1;;;;17035:513:23:o;12207:151::-;12287:34;12304:7;12313;12287:16;:34::i;:::-;-1:-1:-1;;12331:7:23;:20;;-1:-1:-1;;;;;;12331:20:23;12341:10;12331:20;;;12207:151::o;8394:395::-;8474:11;5089:8;;5101:1;5089:13;5081:32;;;;-1:-1:-1;;;5081:32:23;;;;;;;:::i;:::-;5134:1;5123:8;:12;;;8531:26:::1;8540:5:::0;8547:9;8531:8:::1;:26::i;:::-;8570:5;::::0;8515:42;;-1:-1:-1;8515:42:23;;-1:-1:-1;;;;;;8570:5:23::1;:19:::0;8567:50:::1;;8610:7;8616:1;8610:3:::0;:7:::1;:::i;:::-;8591:15;;:26;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;8567:50:23::1;8627:6;::::0;:57:::1;::::0;-1:-1:-1;;;;;8627:6:23::1;8651:10;8671:4;8678:5:::0;8627:23:::1;:57::i;:::-;8694:6;::::0;:31:::1;::::0;-1:-1:-1;;;8694:6:23;::::1;-1:-1:-1::0;;;;;8694:6:23::1;8714:2:::0;8718:6;8694:19:::1;:31::i;:::-;8740:42;::::0;;644:25:35;;;700:2;685:18;;678:34;;;-1:-1:-1;;;;;8740:42:23;::::1;::::0;8757:5:::1;::::0;8745:10:::1;::::0;8740:42:::1;::::0;617:18:35;8740:42:23::1;;;;;;;;-1:-1:-1::0;5167:1:23;5156:8;:12;8394:395;;-1:-1:-1;;;8394:395:23:o;3815:432::-;3859:17;3878;3907:23;3940;4036:20;1262:17;1373:9;-1:-1:-1;;;;;1373:9:23;;;;-1:-1:-1;;;1405:9:23;;;;;-1:-1:-1;;;1443:15:23;;;;;-1:-1:-1;;;1487:15:23;;;;;1209:300;4036:20;3973:83;;-1:-1:-1;3973:83:23;;-1:-1:-1;3973:83:23;-1:-1:-1;3973:83:23;-1:-1:-1;4079:69:23;3973:83;4107:40;-1:-1:-1;;;;;4125:22:23;;4107:15;:40;:::i;4079:69::-;4066:82;-1:-1:-1;4171:69:23;4187:10;4199:40;-1:-1:-1;;;;;4217:22:23;;4199:15;:40;:::i;4171:69::-;4158:82;;3897:350;;3815:432;;:::o;3332:254::-;3478:8;;3418:19;;;;3460:27;;:12;;-1:-1:-1;;;;;3478:8:23;3460:17;:27::i;:::-;3449:38;-1:-1:-1;3497:8:23;3508:12;3509:2;3449:38;3509:2;:::i;:::-;3508:10;;;:12::i;:::-;3497:23;-1:-1:-1;3552:26:23;:6;;;;-1:-1:-1;;;;;3559:18:23;;3552:6;:26::i;:::-;3530:49;3332:254;-1:-1:-1;;;;;3332:254:23:o;22063:757::-;22226:8;22207:15;:27;;:44;;;-1:-1:-1;22238:13:23;;22207:44;22199:72;;;;-1:-1:-1;;;22199:72:23;;11167:2:35;22199:72:23;;;11149:21:35;11206:2;11186:18;;;11179:30;-1:-1:-1;;;11225:18:35;;;11218:45;11280:18;;22199:72:23;10965:339:35;22199:72:23;-1:-1:-1;;;;;22289:19:23;;22281:52;;;;-1:-1:-1;;;22281:52:23;;11511:2:35;22281:52:23;;;11493:21:35;11550:2;11530:18;;;11523:30;-1:-1:-1;;;11569:18:35;;;11562:50;11629:18;;22281:52:23;11309:344:35;22281:52:23;-1:-1:-1;;;;;22351:22:23;;22343:58;;;;-1:-1:-1;;;22343:58:23;;11860:2:35;22343:58:23;;;11842:21:35;11899:2;11879:18;;;11872:30;-1:-1:-1;;;11918:18:35;;;11911:53;11981:18;;22343:58:23;11658:347:35;22343:58:23;-1:-1:-1;;;;;22498:13:23;;22411:18;22498:13;;;:6;:13;;;;;:15;;9615:114;;22471:5;;22478:8;;22488;;22498:15;22411:18;22498:15;;;:::i;:::-;;;;-1:-1:-1;22442:82:23;;;;;;12431:25:35;;;;-1:-1:-1;;;;;12530:15:35;;;12510:18;;;12503:43;12582:15;;;;12562:18;;;12555:43;12641:14;12634:22;12614:18;;;12607:50;12673:19;;;12666:35;12717:19;;;12710:35;;;12403:19;;22442:82:23;;;-1:-1:-1;;22442:82:23;;;;;;;;;;22432:93;;22442:82;22432:93;;;;-1:-1:-1;;;22562:58:23;;;13014:27:35;;;;22591:16:23;13057:11:35;;;13050:27;13093:12;;;13086:28;;;22432:93:23;-1:-1:-1;22535:14:23;;13130:12:35;;22562:58:23;;;;;;;;;;;;22552:69;;;;;;22535:86;;22648:23;22659:6;22667:3;;22648:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;22648:10:23;;-1:-1:-1;;;22648:23:23:i;:::-;-1:-1:-1;;;;;22639:32:23;:5;-1:-1:-1;;;;;22639:32:23;;22631:62;;;;-1:-1:-1;;;22631:62:23;;13355:2:35;22631:62:23;;;13337:21:35;13394:2;13374:18;;;13367:30;-1:-1:-1;;;13413:18:35;;;13406:47;13470:18;;22631:62:23;13153:341:35;22631:62:23;-1:-1:-1;;;;;22712:24:23;;;;;;;:17;:24;;;;;;;;:34;;;;;;;;;;;;;:45;;-1:-1:-1;;22712:45:23;;;;;;;;;;22772:41;;1464::35;;;22772::23;;1437:18:35;22772:41:23;;;;;;;22189:631;;22063:757;;;;;;:::o;12456:152::-;5089:8;;5101:1;5089:13;5081:32;;;;-1:-1:-1;;;5081:32:23;;;;;;;:::i;:::-;5134:1;5123:8;:12;;;;12553:10:::1;-1:-1:-1::0;;;;;12519:44:23::1;12528:7;;;;;;;;;-1:-1:-1::0;;;;;12528:7:23::1;-1:-1:-1::0;;;;;12519:28:23::1;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;12519:44:23::1;;12511:66;;;;-1:-1:-1::0;;;12511:66:23::1;;;;;;;:::i;:::-;12587:5;:14:::0;5167:1;5156:8;:12;12456:152::o;23006:266::-;-1:-1:-1;;;;;23094:22:23;;23086:58;;;;-1:-1:-1;;;23086:58:23;;11860:2:35;23086:58:23;;;11842:21:35;11899:2;11879:18;;;11872:30;-1:-1:-1;;;11918:18:35;;;11911:53;11981:18;;23086:58:23;11658:347:35;23086:58:23;23172:10;23154:29;;;;:17;:29;;;;;;;;-1:-1:-1;;;;;23154:39:23;;;;;;;;;;;;:50;;-1:-1:-1;;23154:50:23;;;;;;;;;;23219:46;;1464:41:35;;;23154:39:23;;23172:10;23219:46;;1437:18:35;23219:46:23;;;;;;;23006:266;;:::o;7626:394::-;7706:11;5089:8;;5101:1;5089:13;5081:32;;;;-1:-1:-1;;;5081:32:23;;;;;;;:::i;:::-;5134:1;5123:8;:12;;;7763:26:::1;7772:5:::0;7779:9;7763:8:::1;:26::i;:::-;7802:5;::::0;7747:42;;-1:-1:-1;7747:42:23;;-1:-1:-1;;;;;;7802:5:23::1;:19:::0;7799:50:::1;;7842:7;7848:1;7842:3:::0;:7:::1;:::i;:::-;7823:15;;:26;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;7799:50:23::1;7859:6;::::0;:57:::1;::::0;-1:-1:-1;;;7859:6:23;::::1;-1:-1:-1::0;;;;;7859:6:23::1;7883:10;7903:4;7910:5:::0;7859:23:::1;:57::i;:::-;7926:6;::::0;:31:::1;::::0;-1:-1:-1;;;;;7926:6:23::1;7946:2:::0;7950:6;7926:19:::1;:31::i;:::-;7972:41;::::0;;644:25:35;;;700:2;685:18;;678:34;;;-1:-1:-1;;;;;7972:41:23;::::1;::::0;7989:4:::1;::::0;7977:10:::1;::::0;7972:41:::1;::::0;617:18:35;7972:41:23::1;470:248:35::0;13712:292:23;13819:7;;13810:30;;;-1:-1:-1;;;13810:30:23;;;;13844:10;;-1:-1:-1;;;;;13819:7:23;;13810:28;;:30;;;;;;;;;;;;;;13819:7;;13810:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;13810:44:23;;13802:66;;;;-1:-1:-1;;;13802:66:23;;;;;;;:::i;:::-;13902:6;;-1:-1:-1;;;;;;;;13902:6:23;;;;;13886:22;;;;13878:31;;;;;;13943:6;;-1:-1:-1;;;;;13943:6:23;;;13927:22;;;;13919:31;;;;;;13960:37;-1:-1:-1;;;;;13960:25:23;;13986:2;13990:6;13960:25;:37::i;:::-;13712:292;;;:::o;8795:66::-;5089:8;;5101:1;5089:13;5081:32;;;;-1:-1:-1;;;5081:32:23;;;;;;;:::i;:::-;5134:1;5123:8;:12;8841:13:::1;:11;:13::i;:::-;5167:1:::0;5156:8;:12;8795:66::o;13033:158::-;5089:8;;5101:1;5089:13;5081:32;;;;-1:-1:-1;;;5081:32:23;;;;;;;:::i;:::-;5134:1;5123:8;:12;;;;13131:10:::1;-1:-1:-1::0;;;;;13097:44:23::1;13106:7;;;;;;;;;-1:-1:-1::0;;;;;13106:7:23::1;-1:-1:-1::0;;;;;13097:28:23::1;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;13097:44:23::1;;13089:66;;;;-1:-1:-1::0;;;13089:66:23::1;;;;;;;:::i;:::-;13165:4;:19:::0;;-1:-1:-1;;;;;;13165:19:23::1;-1:-1:-1::0;;;;;13165:19:23;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;5156:8:23;:12;13033:158::o;15769:512::-;15861:11;5089:8;;5101:1;5089:13;5081:32;;;;-1:-1:-1;;;5081:32:23;;;;;;;:::i;:::-;5134:1;5123:8;:12;-1:-1:-1;;;;;15892:16:23;::::1;15884:46;;;::::0;-1:-1:-1;;;15884:46:23;;10473:2:35;15884:46:23::1;::::0;::::1;10455:21:35::0;10512:2;10492:18;;;10485:30;-1:-1:-1;;;10531:18:35;;;10524:47;10588:18;;15884:46:23::1;10271:341:35::0;15884:46:23::1;15940:8;15974:26;15983:5;15990:9;15974:8;:26::i;:::-;15958:42:::0;-1:-1:-1;15958:42:23;-1:-1:-1;16010:12:23::1;16025:16;16036:4:::0;16025:10:::1;:16::i;:::-;16010:31;;16052:48;16061:2;16065:4;16071:5;16078:6;16086:4;16092:7;16052:8;:48::i;:::-;16114:5;::::0;-1:-1:-1;;;;;16114:5:23::1;:19:::0;16111:50:::1;;16154:7;16160:1;16154:3:::0;:7:::1;:::i;:::-;16135:15;;:26;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;16111:50:23::1;16171:6;::::0;:57:::1;::::0;-1:-1:-1;;;16171:6:23;::::1;-1:-1:-1::0;;;;;16171:6:23::1;16195:10;16215:4;16222:5:::0;16171:23:::1;:57::i;20688:218::-:0;-1:-1:-1;;;;;20810:23:23;;20766:14;20810:23;;;:17;:23;;;;;;;;20834:10;20810:35;;;;;;;;20766:14;;20810:35;;20802:60;;;;-1:-1:-1;;;20802:60:23;;13701:2:35;20802:60:23;;;13683:21:35;13740:2;13720:18;;;13713:30;-1:-1:-1;;;13759:18:35;;;13752:42;13811:18;;20802:60:23;13499:336:35;20802:60:23;20873:26;20883:4;20889:5;20896:2;20873:9;:26::i;:::-;20866:33;;;;20688:218;;;;;;:::o;13289:202::-;5089:8;;5101:1;5089:13;5081:32;;;;-1:-1:-1;;;5081:32:23;;;;;;;:::i;:::-;5134:1;5123:8;:12;;;;13389:10:::1;-1:-1:-1::0;;;;;13355:44:23::1;13364:7;;;;;;;;;-1:-1:-1::0;;;;;13364:7:23::1;-1:-1:-1::0;;;;;13355:28:23::1;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;13355:44:23::1;;13347:66;;;;-1:-1:-1::0;;;13347:66:23::1;;;;;;;:::i;:::-;13426:5;::::0;-1:-1:-1;;;;;13426:5:23::1;:19:::0;13423:37:::1;;13447:13;:11;:13::i;:::-;13470:5;:14:::0;;-1:-1:-1;;;;;;13470:14:23::1;-1:-1:-1::0;;;;;13470:14:23;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;5156:8:23;:12;13289:202::o;18505:1319::-;-1:-1:-1;;;;;18642:11:23;;18580:14;18642:11;;;:5;:11;;;;;;;;:18;;;;;;;;18682:14;;18718;;;;;18753:8;;;;;18771:18;;;18799;;;;18827:12;;;;18682:14;;18718;18642:18;18857:7;18849:32;;;;-1:-1:-1;;;18849:32:23;;14042:2:35;18849:32:23;;;14024:21:35;14081:2;14061:18;;;14054:30;-1:-1:-1;;;14100:18:35;;;14093:42;14152:18;;18849:32:23;13840:336:35;18849:32:23;18906:15;18899:3;:22;;18891:51;;;;-1:-1:-1;;;18891:51:23;;14383:2:35;18891:51:23;;;14365:21:35;14422:2;14402:18;;;14395:30;-1:-1:-1;;;14441:18:35;;;14434:46;14497:18;;18891:51:23;14181:340:35;18891:51:23;18953:13;18968;18985;:11;:13::i;:::-;18952:46;;;;19009:17;19028;19049:13;:11;:13::i;:::-;19008:54;;-1:-1:-1;19008:54:23;-1:-1:-1;19231:8:23;19198:30;19219:9;9367:5;19198:30;:::i;:::-;:41;;;;:::i;:::-;19187:8;19175:9;19076:96;19131:32;-1:-1:-1;;;;;19147:16:23;;-1:-1:-1;;;19131:32:23;:::i;:::-;19094;-1:-1:-1;;;;;19110:16:23;;-1:-1:-1;;;19094:32:23;:::i;:::-;19077:50;;-1:-1:-1;;;19077:50:23;:::i;:::-;:87;;;;:::i;:::-;19076:94;:96::i;:::-;:108;;;;:::i;:::-;:119;;;;:::i;:::-;:163;19073:745;;;19282:6;;19267:1;;-1:-1:-1;19282:34:23;;-1:-1:-1;;;19282:6:23;;-1:-1:-1;;;;;19282:6:23;19302:2;19306:9;19282:19;:34::i;:::-;19330:20;19388:8;19360:25;-1:-1:-1;;;19360:9:23;:25;:::i;:::-;:36;;;;:::i;:::-;19330:67;;19411:43;19428:10;19440:13;19411:16;:43::i;:::-;19473:38;;;644:25:35;;;700:2;685:18;;678:34;;;19488:4:23;;-1:-1:-1;;;;;19473:38:23;;;;;617:18:35;19473:38:23;;;;;;;19241:281;19073:745;;;19577:6;;19562:1;;-1:-1:-1;19577:34:23;;-1:-1:-1;;;;;19577:6:23;19597:2;19601:9;19577:19;:34::i;:::-;19625:20;19683:8;19655:25;-1:-1:-1;;;19655:9:23;:25;:::i;:::-;:36;;;;:::i;:::-;19625:67;;19706:43;19723:10;19735:13;19706:16;:43::i;:::-;19768:39;;;644:25:35;;;700:2;685:18;;678:34;;;19783:5:23;;-1:-1:-1;;;;;19768:39:23;;;;;617:18:35;19768:39:23;;;;;;;19536:282;19073:745;18612:1212;;;;;;18505:1319;;;;;;:::o;6642:610::-;6706:8;6716:11;6755:1;6747:5;:9;6739:42;;;;-1:-1:-1;;;6739:42:23;;14728:2:35;6739:42:23;;;14710:21:35;14767:2;14747:18;;;14740:30;-1:-1:-1;;;14786:18:35;;;14779:50;14846:18;;6739:42:23;14526:344:35;6739:42:23;6792:13;6807;6824;:11;:13::i;:::-;6791:46;;;;6848:17;6867;6888:13;:11;:13::i;:::-;6847:54;;-1:-1:-1;6847:54:23;-1:-1:-1;;;;6917:24:23;6936:5;-1:-1:-1;;;;;6917:16:23;;:24;:::i;:::-;:40;;;;:::i;:::-;6911:46;-1:-1:-1;6967:17:23;6987:11;6911:46;6987:5;:11;:::i;:::-;6967:31;-1:-1:-1;7044:23:23;6967:31;7044:8;:23;:::i;:::-;7017;7032:8;7017:12;:23;:::i;:::-;:51;;;;:::i;:::-;7008:60;;7096:9;7086:6;:19;;7078:40;;;;-1:-1:-1;;;7078:40:23;;15077:2:35;7078:40:23;;;15059:21:35;15116:1;15096:18;;;15089:29;-1:-1:-1;;;15134:18:35;;;15127:38;15182:18;;7078:40:23;14875:331:35;7078:40:23;7128:20;7183:8;7158:22;-1:-1:-1;;;7158:6:23;:22;:::i;:::-;:33;;;;:::i;:::-;7128:64;;7202:43;7219:10;7231:13;7202:16;:43::i;:::-;6729:523;;;;;;6642:610;;;;;:::o;14010:751::-;-1:-1:-1;;;;;14149:13:23;;14136:10;14149:13;;;:9;:13;;;;;:15;;;14136:10;14149:15;;;:::i;:::-;;;;-1:-1:-1;;;;;;14194:9:23;;14174:17;14194:9;;;:5;:9;;;;;;;;:16;;;;;;;;14136:28;;-1:-1:-1;14237:13:23;:37;;14265:9;14237:37;;;14253:9;14237:37;14221:53;-1:-1:-1;14284:25:23;9491:4;14325:27;9491:4;14325:7;:27;:::i;:::-;14312:41;;:9;:41;:::i;:::-;:61;;;;:::i;:::-;14284:89;-1:-1:-1;14383:25:23;9491:4;14424:27;9491:4;14424:7;:27;:::i;:::-;14411:41;;:9;:41;:::i;:::-;:61;;;;:::i;:::-;14383:89;-1:-1:-1;14482:12:23;14497:22;14515:4;14497:15;:22;:::i;:::-;14530:37;;;14577:14;;;:37;;;14624:8;;;:18;;;14658:96;;;15470:25:35;;;15526:2;15511:18;;15504:34;;;15554:18;;;15547:34;;;15612:2;15597:18;;15590:34;;;15655:3;15640:19;;15633:35;;;14624:18:23;;-1:-1:-1;14658:96:23;;;;-1:-1:-1;;;;;14658:96:23;;;;;15457:3:35;15442:19;14658:96:23;;;;;;;14126:635;;;;;;14010:751;;;;;;:::o;815:397:34:-;1038:51;;;-1:-1:-1;;;;;15937:15:35;;;1038:51:34;;;15919:34:35;15989:15;;;15969:18;;;15962:43;16021:18;;;;16014:34;;;1038:51:34;;;;;;;;;;15854:18:35;;;;1038:51:34;;;;;;;-1:-1:-1;;;;;1038:51:34;-1:-1:-1;;;1038:51:34;;;1027:63;;-1:-1:-1;;;;1027:10:34;;;;:63;;1038:51;1027:63;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;991:99;;;;1108:7;:57;;;;-1:-1:-1;1120:11:34;;:16;;:44;;;1151:4;1140:24;;;;;;;;;;;;:::i;:::-;1100:105;;;;-1:-1:-1;;;1100:105:34;;16928:2:35;1100:105:34;;;16910:21:35;16967:2;16947:18;;;16940:30;17006:34;16986:18;;;16979:62;-1:-1:-1;;;17057:18:35;;;17050:33;17100:19;;1100:105:34;16726:399:35;1100:105:34;903:309;;815:397;;;;:::o;14767:248:23:-;14866:4;;-1:-1:-1;;;;;14866:4:23;14858:27;14855:154;;14901:7;9491:4;14937:7;14911:23;14912:14;14920:6;14912:5;:14;:::i;14911:23::-;:33;;;;:::i;:::-;:53;;;;:::i;:::-;14978:4;;:20;;-1:-1:-1;;;14978:20:23;;-1:-1:-1;;;;;17322:32:35;;;14978:20:23;;;17304:51:35;17371:18;;;17364:34;;;14901:63:23;;-1:-1:-1;14978:4:23;;;:12;;17277:18:35;;14978:20:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14887:122;14855:154;14767:248;;;;:::o;5181:180::-;5268:6;;-1:-1:-1;;;5268:6:23;;-1:-1:-1;;;;;5268:6:23;:20;5260:42;;;;-1:-1:-1;;;5260:42:23;;;;;;;:::i;:::-;5312:6;:16;;-1:-1:-1;;;;;;5312:16:23;-1:-1:-1;;;;;;;;5312:16:23;;;;;;;5338:6;:16;;-1:-1:-1;;;;;;5338:16:23;;;;;;;;5181:180::o;452:357:34:-;645:45;;;-1:-1:-1;;;;;17322:32:35;;;645:45:34;;;17304:51:35;17371:18;;;;17364:34;;;645:45:34;;;;;;;;;;17277:18:35;;;;645:45:34;;;;;;;-1:-1:-1;;;;;645:45:34;-1:-1:-1;;;645:45:34;;;634:57;;-1:-1:-1;;;;634:10:34;;;;:57;;645:45;634:57;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;598:93;;;;709:7;:57;;;;-1:-1:-1;721:11:34;;:16;;:44;;;752:4;741:24;;;;;;;;;;;;:::i;:::-;701:101;;;;-1:-1:-1;;;701:101:34;;17611:2:35;701:101:34;;;17593:21:35;17650:2;17630:18;;;17623:30;17689:33;17669:18;;;17662:61;17740:18;;701:101:34;17409:355:35;701:101:34;522:287;;452:357;;;:::o;1655:267:32:-;1715:6;1766:1;1771;1766:6;1757:16;;;;;;1787:14;1804:12;1811:1;1814;1804:5;:12::i;:::-;1787:29;-1:-1:-1;;;;;;;;;;;1839:29:32;;;;1830:39;;;;;;1898:6;1655:267;-1:-1:-1;;;1655:267:32:o;2114:7783::-;2163:6;2218:20;2214:1;:24;;;2205:34;;;;;;-1:-1:-1;;2270:1:32;:25;;;2266:39;;;-1:-1:-1;2304:1:32;;2114:7783;-1:-1:-1;2114:7783:32:o;2266:39::-;-1:-1:-1;;;2333:14:32;2407:18;2403:22;;:26;;;2399:108;;;2465:35;2456:44;2504:3;2456:51;2399:108;2550:1;2525;2529:18;2525:22;:26;;;2521:108;;;2587:35;2578:44;2626:3;2578:51;2521:108;2672:1;2647;2651:18;2647:22;:26;;;2643:108;;;2709:35;2700:44;2748:3;2700:51;2643:108;2794:1;2769;2773:18;2769:22;:26;;;2765:108;;;2831:35;2822:44;2870:3;2822:51;2765:108;2915:1;2891;2895:17;2891:21;:25;;;2887:107;;;2952:35;2943:44;2991:3;2943:51;2887:107;3036:1;3012;3016:17;3012:21;:25;;;3008:107;;;3073:35;3064:44;3112:3;3064:51;3008:107;3157:1;3133;3137:17;3133:21;:25;;;3129:107;;;3194:35;3185:44;3233:3;3185:51;3129:107;3278:1;3254;3258:17;3254:21;:25;;;3250:107;;;3315:35;3306:44;3354:3;3306:51;3250:107;3398:1;3375;3379:16;3375:20;:24;;;3371:106;;;3435:35;3426:44;3474:3;3426:51;3371:106;3518:1;3495;3499:16;3495:20;:24;;;3491:106;;;3555:35;3546:44;3594:3;3546:51;3491:106;3638:1;3615;3619:16;3615:20;:24;;;3611:106;;;3675:35;3666:44;3714:3;3666:51;3611:106;3758:1;3735;3739:16;3735:20;:24;;;3731:106;;;3795:35;3786:44;3834:3;3786:51;3731:106;3877:1;3855;3859:15;3855:19;:23;;;3851:105;;;3914:35;3905:44;3953:3;3905:51;3851:105;3996:1;3974;3978:15;3974:19;:23;;;3970:105;;;4033:35;4024:44;4072:3;4024:51;3970:105;4115:1;4093;4097:15;4093:19;:23;;;4089:105;;;4152:35;4143:44;4191:3;4143:51;4089:105;4234:1;4212;4216:15;4212:19;:23;;;4208:105;;;4271:35;4262:44;4310:3;4262:51;4208:105;4352:1;4331;4335:14;4331:18;:22;;;4327:104;;;4389:35;4380:44;4428:3;4380:51;4327:104;4470:1;4449;4453:14;4449:18;:22;;;4445:104;;;4507:35;4498:44;4546:3;4498:51;4445:104;4588:1;4567;4571:14;4567:18;:22;;;4563:104;;;4625:35;4616:44;4664:3;4616:51;4563:104;4706:1;4685;4689:14;4685:18;:22;;;4681:104;;;4743:35;4734:44;4782:3;4734:51;4681:104;4823:1;4803;4807:13;4803:17;:21;;;4799:103;;;4860:35;4851:44;4899:3;4851:51;4799:103;4940:1;4920;4924:13;4920:17;:21;;;4916:103;;;4977:35;4968:44;5016:3;4968:51;4916:103;5057:1;5037;5041:13;5037:17;:21;;;5033:103;;;5094:35;5085:44;5133:3;5085:51;5033:103;5174:1;5154;5158:13;5154:17;:21;;;5150:103;;;5211:35;5202:44;5250:3;5202:51;5150:103;5290:1;5271;5275:12;5271:16;:20;;;5267:102;;;5327:35;5318:44;5366:3;5318:51;5267:102;5406:1;5387;5391:12;5387:16;:20;;;5383:102;;;5443:35;5434:44;5482:3;5434:51;5383:102;5522:1;5503;5507:12;5503:16;:20;;;5499:102;;;5559:35;5550:44;5598:3;5550:51;5499:102;5638:1;5619;5623:12;5619:16;:20;;;5615:102;;;5675:35;5666:44;5714:3;5666:51;5615:102;5753:1;5735;5739:11;5735:15;:19;;;5731:101;;;5790:35;5781:44;5829:3;5781:51;5731:101;5868:1;5850;5854:11;5850:15;:19;;;5846:101;;;5905:35;5896:44;5944:3;5896:51;5846:101;5983:1;5965;5969:11;5965:15;:19;;;5961:101;;;6020:35;6011:44;6059:3;6011:51;5961:101;6098:1;6080;6084:11;6080:15;:19;;;6076:101;;;6135:35;6126:44;6174:3;6126:51;6076:101;6212:1;6195;6199:10;6195:14;:18;;;6191:100;;;6249:35;6240:44;6288:3;6240:51;6191:100;6326:1;6309;6313:10;6309:14;:18;;;6305:100;;;6363:35;6354:44;6402:3;6354:51;6305:100;6440:1;6423;6427:10;6423:14;:18;;;6419:100;;;6477:35;6468:44;6516:3;6468:51;6419:100;6554:1;6537;6541:10;6537:14;:18;;;6533:100;;;6591:35;6582:44;6630:3;6582:51;6533:100;6667:1;6651;6655:9;6651:13;:17;;;6647:99;;;6704:35;6695:44;6743:3;6695:51;6647:99;6780:1;6764;6768:9;6764:13;:17;;;6760:99;;;6817:35;6808:44;6856:3;6808:51;6760:99;6893:1;6877;6881:9;6877:13;:17;;;6873:99;;;6930:35;6921:44;6969:3;6921:51;6873:99;7006:1;6990;6994:9;6990:13;:17;;;6986:99;;;7043:35;7034:44;7082:3;7034:51;6986:99;7118:1;7103;7107:8;7103:12;:16;;;7099:98;;;7155:35;7146:44;7194:3;7146:51;7099:98;7230:1;7215;7219:8;7215:12;:16;;;7211:98;;;7267:35;7258:44;7306:3;7258:51;7211:98;7342:1;7327;7331:8;7327:12;:16;;;7323:98;;;7379:35;7370:44;7418:3;7370:51;7323:98;7454:1;7439;7443:8;7439:12;:16;;;7435:98;;;7491:35;7482:44;7530:3;7482:51;7435:98;7565:1;7551;7555:7;7551:11;:15;;;7547:97;;;7602:35;7593:44;7641:3;7593:51;7547:97;7676:1;7662;7666:7;7662:11;:15;;;7658:97;;;7713:35;7704:44;7752:3;7704:51;7658:97;7787:1;7773;7777:7;7773:11;:15;;;7769:97;;;7824:35;7815:44;7863:3;7815:51;7769:97;7898:1;7884;7888:7;7884:11;:15;;;7880:97;;;7935:35;7926:44;7974:3;7926:51;7880:97;8008:1;7995;7999:6;7995:10;:14;;;7991:96;;;8045:35;8036:44;8084:3;8036:51;7991:96;8118:1;8105;8109:6;8105:10;:14;;;8101:96;;;8155:35;8146:44;8194:3;8146:51;8101:96;8228:1;8215;8219:6;8215:10;:14;;;8211:96;;;8265:35;8256:44;8304:3;8256:51;8211:96;8338:1;8325;8329:6;8325:10;:14;;;8321:96;;;8375:35;8366:44;8414:3;8366:51;8321:96;8447:1;8435;8439:5;8435:9;:13;;;8431:95;;;8484:35;8475:44;8523:3;8475:51;8431:95;8556:1;8544;8548:5;8544:9;:13;;;8540:95;;;8593:35;8584:44;8632:3;8584:51;8540:95;8665:1;8653;8657:5;8653:9;:13;;;8649:95;;;8702:35;8693:44;8741:3;8693:51;8649:95;8774:1;8762;8766:5;8762:9;:13;;;8758:95;;;8811:35;8802:44;8850:3;8802:51;8758:95;8882:1;8871;8875:4;8871:8;:12;;;8867:94;;;8919:35;8910:44;8958:3;8910:51;8867:94;8990:1;8979;8983:4;8979:8;:12;;;8975:94;;;9027:35;9018:44;9066:3;9018:51;8975:94;9098:1;9087;9091:4;9087:8;:12;;;9083:94;;;9135:35;9126:44;9174:3;9126:51;9083:94;9206:1;9195;9199:4;9195:8;:12;;;9191:94;;;9243:35;9234:44;9282:3;9234:51;9191:94;9313:1;9303;9307:3;9303:7;:11;;;9299:93;;;9350:35;9341:44;9389:3;9341:51;9299:93;9420:1;9410;9414:3;9410:7;:11;;;9406:93;;;9457:35;9448:44;9496:3;9448:51;9406:93;9527:1;9517;9521:3;9517:7;:11;;;9513:93;;;9564:35;9555:44;9603:3;9555:51;9513:93;9634:1;9624;9628:3;9624:7;:11;;;9620:93;;;9671:35;9662:44;9710:3;9662:51;9620:93;9762:7;;;;9767:2;9762:7;9756:2;:14;9748:23;;9728:44;-1:-1:-1;;;;;9795:38:32;;;9786:48;;;;;756:579;815:7;862:1;867;862:6;858:20;;-1:-1:-1;877:1:32;870:8;;858:20;907:1;902;:6;;;;893:16;;;;;;947:10;;;;-1:-1:-1;;;;;962:38:32;;938:63;;1006:2;937:71;;1064:3;1059:8;;;1035:33;-1:-1:-1;;;;;1092:56:32;;;1083:66;;;;;;1170:2;1163:9;1218:71;;1196:93;;;1187:103;;;;;;1311:7;;756:579;-1:-1:-1;;;756:579:32:o;20912:752:23:-;20993:7;21016:9;:16;21036:2;21016:22;21012:646;;21174:4;21159:20;;21153:27;21223:4;21208:20;;21202:27;21280:4;21265:20;;21259:27;21054:9;21251:36;21332:66;21319:79;;21315:285;;;21433:1;21418:17;;;;;;;21315:285;21460:1;:7;;21465:2;21460:7;;:18;;;;;21471:1;:7;;21476:2;21471:7;;21460:18;21456:144;;;21513:1;21498:17;;;;;;;21456:144;21561:24;;;;;;;;;;;;17996:25:35;;;18069:4;18057:17;;18037:18;;;18030:45;;;;18091:18;;;18084:34;;;18134:18;;;18127:34;;;21561:24:23;;17968:19:35;;21561:24:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21554:31;;;;;;;21012:646;-1:-1:-1;21645:1:23;21630:17;;5818:610;5882:8;5892:11;5931:1;5923:5;:9;5915:42;;;;-1:-1:-1;;;5915:42:23;;14728:2:35;5915:42:23;;;14710:21:35;14767:2;14747:18;;;14740:30;-1:-1:-1;;;14786:18:35;;;14779:50;14846:18;;5915:42:23;14526:344:35;5915:42:23;5968:13;5983;6000;:11;:13::i;:::-;5967:46;;;;6024:17;6043;6064:13;:11;:13::i;:::-;6023:54;;-1:-1:-1;6023:54:23;-1:-1:-1;;;;6093:24:23;6112:5;-1:-1:-1;;;;;6093:16:23;;:24;:::i;:::-;:40;;;;:::i;:::-;6087:46;-1:-1:-1;6143:17:23;6163:11;6087:46;6163:5;:11;:::i;:::-;6143:31;-1:-1:-1;6220:23:23;6143:31;6220:8;:23;:::i;:::-;6193;6208:8;6193:12;:23;:::i;:::-;:51;;;;:::i;:::-;6184:60;;6272:9;6262:6;:19;;6254:40;;;;-1:-1:-1;;;6254:40:23;;15077:2:35;6254:40:23;;;15059:21:35;15116:1;15096:18;;;15089:29;-1:-1:-1;;;15134:18:35;;;15127:38;15182:18;;6254:40:23;14875:331:35;6254:40:23;6304:20;6359:8;6334:22;-1:-1:-1;;;6334:6:23;:22;:::i;:::-;:33;;;;:::i;:::-;6304:64;;6378:43;6395:10;6407:13;6378:16;:43::i;8867:282::-;8919:15;;;8954;;;8909:7;8979:19;;;;9008;;;9057:5;;-1:-1:-1;9037:6:23;8919:15;;8954;9037:30;;-1:-1:-1;;;;;;;;9037:6:23;;;;;;9057:5;8919:15;9037:19;:30::i;:::-;9097:5;;9077:6;;:30;;-1:-1:-1;;;;;9077:6:23;;;;9097:5;9104:2;9077:19;:30::i;:::-;9122:20;;;644:25:35;;;700:2;685:18;;678:34;;;9122:20:23;;617:18:35;9122:20:23;;;;;;;8899:250;;8867:282::o;174:3226:33:-;906:3;992:1;-1:-1:-1;;;1169:44:33;;1159:136;;1275:2;1271:10;;;;;1242:3;1238:11;1159:136;1324:21;1321:1;1318:28;1308:119;;1407:2;1403:10;;;;;1375:2;1371:10;1308:119;1456:13;1453:1;1450:20;1440:111;;1531:2;1527:10;;;;;1499:2;1495:10;1440:111;1580:9;1577:1;1574:16;1564:106;;1651:1;1647:9;;;;;1619:2;1615:10;1564:106;2195:5;2188:13;2181:21;2177:2;2173:30;2467:9;;;2460:17;2457:1;2453:25;;;2510:9;;;2503:17;2496:25;;2553:9;;;2546:17;2539:25;;2596:9;;;2589:17;2582:25;;2639:9;;;2632:17;2625:25;;2682:9;;;2675:17;2668:25;;2725:9;;;2718:17;2711:25;;3324:9;;;3321:16;-1:-1:-1;3318:66:33;;;3361:9;;;174:3226::o;2395:213:23:-;2499:51;2518:15;2535:14;2499:18;:51::i;:::-;2487:9;:63;;2585:15;-1:-1:-1;;;;;2560:41:23;;;-1:-1:-1;;;2560:41:23;-1:-1:-1;;2560:41:23;;;2487:63;;2560:41;;;;;;;;;;-1:-1:-1;;2395:213:23:o;2791:::-;2895:51;2914:15;2931:14;2895:18;:51::i;:::-;2883:9;:63;;2956:41;;-1:-1:-1;;;;;;;;2883:63:23;;;;-1:-1:-1;;;;;2956:41:23;;-1:-1:-1;;;2981:15:23;2956:41;;;;;;;;;;;;;;-1:-1:-1;;2791:213:23:o;10219:1526:32:-;10279:7;10331:1;10336;10331:6;10322:16;;;;;;10353:14;-1:-1:-1;;;;;10386:1:32;:55;10382:1241;;10480:1;10474:2;10469:1;:7;;10468:13;;;;;:::i;:::-;;10459:22;;10382:1241;;;10532:3;10566:8;;;10602:11;10596:17;;10592:48;;10624:2;10628:9;;;;10617;10592:48;10667:7;10661:2;:13;10657:44;;10685:2;10689:9;;;;10678;10657:44;10728:5;10722:2;:11;10718:40;;10744:1;10747:8;;;;10737;10718:40;10785:4;10779:2;:10;10775:39;;10800:1;10803:8;;;;10793;10775:39;10841:3;10835:2;:9;10831:38;;10855:1;10858:8;;;;10848;10831:38;10896:3;10890:2;:9;10886:23;;10908:1;10901:8;;;;10886:23;11005:3;10999;:9;10994:1;10990;:5;:18;;11012:1;10989:24;10981:3;10975;:9;10970:1;:14;;10969:45;;;;;:::i;:::-;;10960:54;;-1:-1:-1;;;;;11041:6:32;:44;;11032:54;;;;;;11133:3;11128:8;;;11118:19;;-1:-1:-1;;;;;11178:38:32;;11168:49;;11254:3;11249:8;;;11293:2;11288:7;;;11318;;;11314:20;;;11333:1;11327:7;;;;11314:20;11426:3;11420:9;;;;11352:8;;11451:7;;;11447:20;;;11466:1;11460:7;;;;11447:20;11485:8;;;11569:3;11563:9;;;11557:15;;11549:24;;;;:::i;:::-;11607:1;11602:2;:6;;;;;:::i;:::-;;11592:16;;;;10500:1123;;;;;;10382:1241;-1:-1:-1;;;;;11646:6:32;:44;;11637:54;;;;;1918:294:23;2016:19;-1:-1:-1;;;;;2061:21:23;;;;2105:20;;-1:-1:-1;;;2174:14:23;2105:20;2061:21;2174:14;:::i;:::-;:30;;;;:::i;:::-;2157:14;2166:5;2157:6;:14;:::i;:::-;:47;;;;:::i;14:131:35:-;-1:-1:-1;;;;;89:31:35;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:315::-;218:6;226;279:2;267:9;258:7;254:23;250:32;247:52;;;295:1;292;285:12;247:52;331:9;318:23;308:33;;391:2;380:9;376:18;363:32;404:31;429:5;404:31;:::i;:::-;454:5;444:15;;;150:315;;;;;:::o;931:388::-;999:6;1007;1060:2;1048:9;1039:7;1035:23;1031:32;1028:52;;;1076:1;1073;1066:12;1028:52;1115:9;1102:23;1134:31;1159:5;1134:31;:::i;:::-;1184:5;-1:-1:-1;1241:2:35;1226:18;;1213:32;1254:33;1213:32;1254:33;:::i;1516:180::-;1575:6;1628:2;1616:9;1607:7;1603:23;1599:32;1596:52;;;1644:1;1641;1634:12;1596:52;-1:-1:-1;1667:23:35;;1516:180;-1:-1:-1;1516:180:35:o;1883:171::-;1950:20;;-1:-1:-1;;;;;1999:30:35;;1989:41;;1979:69;;2044:1;2041;2034:12;2059:184;2117:6;2170:2;2158:9;2149:7;2145:23;2141:32;2138:52;;;2186:1;2183;2176:12;2138:52;2209:28;2227:9;2209:28;:::i;2248:452::-;2334:6;2342;2350;2358;2411:3;2399:9;2390:7;2386:23;2382:33;2379:53;;;2428:1;2425;2418:12;2379:53;2467:9;2454:23;2486:31;2511:5;2486:31;:::i;:::-;2536:5;2588:2;2573:18;;2560:32;;-1:-1:-1;2639:2:35;2624:18;;2611:32;;2690:2;2675:18;2662:32;;-1:-1:-1;2248:452:35;-1:-1:-1;;;2248:452:35:o;3110:383::-;3187:6;3195;3203;3256:2;3244:9;3235:7;3231:23;3227:32;3224:52;;;3272:1;3269;3262:12;3224:52;3311:9;3298:23;3330:31;3355:5;3330:31;:::i;:::-;3380:5;3432:2;3417:18;;3404:32;;-1:-1:-1;3483:2:35;3468:18;;;3455:32;;3110:383;-1:-1:-1;;;3110:383:35:o;3802:252::-;3869:6;3877;3930:2;3918:9;3909:7;3905:23;3901:32;3898:52;;;3946:1;3943;3936:12;3898:52;3969:28;3987:9;3969:28;:::i;:::-;3959:38;4044:2;4029:18;;;;4016:32;;-1:-1:-1;;;3802:252:35:o;4264:118::-;4350:5;4343:13;4336:21;4329:5;4326:32;4316:60;;4372:1;4369;4362:12;4387:1072;4490:6;4498;4506;4514;4522;4530;4583:3;4571:9;4562:7;4558:23;4554:33;4551:53;;;4600:1;4597;4590:12;4551:53;4639:9;4626:23;4658:31;4683:5;4658:31;:::i;:::-;4708:5;-1:-1:-1;4765:2:35;4750:18;;4737:32;4778:33;4737:32;4778:33;:::i;:::-;4830:7;-1:-1:-1;4889:2:35;4874:18;;4861:32;4902:30;4861:32;4902:30;:::i;:::-;4951:7;-1:-1:-1;5005:2:35;4990:18;;4977:32;;-1:-1:-1;5060:3:35;5045:19;;5032:33;-1:-1:-1;;;;;5114:14:35;;;5111:34;;;5141:1;5138;5131:12;5111:34;5179:6;5168:9;5164:22;5154:32;;5224:7;5217:4;5213:2;5209:13;5205:27;5195:55;;5246:1;5243;5236:12;5195:55;5286:2;5273:16;5312:2;5304:6;5301:14;5298:34;;;5328:1;5325;5318:12;5298:34;5373:7;5368:2;5359:6;5355:2;5351:15;5347:24;5344:37;5341:57;;;5394:1;5391;5384:12;5341:57;5425:2;5421;5417:11;5407:21;;5447:6;5437:16;;;;;4387:1072;;;;;;;;:::o;5464:247::-;5523:6;5576:2;5564:9;5555:7;5551:23;5547:32;5544:52;;;5592:1;5589;5582:12;5544:52;5631:9;5618:23;5650:31;5675:5;5650:31;:::i;5716:382::-;5781:6;5789;5842:2;5830:9;5821:7;5817:23;5813:32;5810:52;;;5858:1;5855;5848:12;5810:52;5897:9;5884:23;5916:31;5941:5;5916:31;:::i;:::-;5966:5;-1:-1:-1;6023:2:35;6008:18;;5995:32;6036:30;5995:32;6036:30;:::i;6103:456::-;6180:6;6188;6196;6249:2;6237:9;6228:7;6224:23;6220:32;6217:52;;;6265:1;6262;6255:12;6217:52;6304:9;6291:23;6323:31;6348:5;6323:31;:::i;:::-;6373:5;-1:-1:-1;6430:2:35;6415:18;;6402:32;6443:33;6402:32;6443:33;:::i;:::-;6103:456;;6495:7;;-1:-1:-1;;;6549:2:35;6534:18;;;;6521:32;;6103:456::o;6564:315::-;6632:6;6640;6693:2;6681:9;6672:7;6668:23;6664:32;6661:52;;;6709:1;6706;6699:12;6661:52;6748:9;6735:23;6767:31;6792:5;6767:31;:::i;7208:456::-;7285:6;7293;7301;7354:2;7342:9;7333:7;7329:23;7325:32;7322:52;;;7370:1;7367;7360:12;7322:52;7409:9;7396:23;7428:31;7453:5;7428:31;:::i;:::-;7478:5;-1:-1:-1;7530:2:35;7515:18;;7502:32;;-1:-1:-1;7586:2:35;7571:18;;7558:32;7599:33;7558:32;7599:33;:::i;:::-;7651:7;7641:17;;;7208:456;;;;;:::o;7669:329::-;7871:2;7853:21;;;7910:1;7890:18;;;7883:29;-1:-1:-1;;;7943:2:35;7928:18;;7921:36;7989:2;7974:18;;7669:329::o;8003:184::-;8073:6;8126:2;8114:9;8105:7;8101:23;8097:32;8094:52;;;8142:1;8139;8132:12;8094:52;-1:-1:-1;8165:16:35;;8003:184;-1:-1:-1;8003:184:35:o;8192:127::-;8253:10;8248:3;8244:20;8241:1;8234:31;8284:4;8281:1;8274:15;8308:4;8305:1;8298:15;8324:128;8391:9;;;8412:11;;;8409:37;;;8426:18;;:::i;8457:168::-;8530:9;;;8561;;8578:15;;;8572:22;;8558:37;8548:71;;8599:18;;:::i;8630:127::-;8691:10;8686:3;8682:20;8679:1;8672:31;8722:4;8719:1;8712:15;8746:4;8743:1;8736:15;8762:217;8802:1;8828;8818:132;;8872:10;8867:3;8863:20;8860:1;8853:31;8907:4;8904:1;8897:15;8935:4;8932:1;8925:15;8818:132;-1:-1:-1;8964:9:35;;8762:217::o;9325:251::-;9395:6;9448:2;9436:9;9427:7;9423:23;9419:32;9416:52;;;9464:1;9461;9454:12;9416:52;9496:9;9490:16;9515:31;9540:5;9515:31;:::i;9581:332::-;9783:2;9765:21;;;9822:1;9802:18;;;9795:29;-1:-1:-1;;;9855:2:35;9840:18;;9833:39;9904:2;9889:18;;9581:332::o;10617:125::-;10682:9;;;10703:10;;;10700:36;;;10716:18;;:::i;10747:213::-;10782:3;10830:5;10826:2;10815:21;-1:-1:-1;;;;;10860:39:35;10851:7;10848:52;10845:78;;10903:18;;:::i;:::-;10943:1;10939:15;;10747:213;-1:-1:-1;;10747:213:35:o;12010:135::-;12049:3;12070:17;;;12067:43;;12090:18;;:::i;:::-;-1:-1:-1;12137:1:35;12126:13;;12010:135::o;16059:412::-;16188:3;16226:6;16220:13;16251:1;16261:129;16275:6;16272:1;16269:13;16261:129;;;16373:4;16357:14;;;16353:25;;16347:32;16334:11;;;16327:53;16290:12;16261:129;;;-1:-1:-1;16445:1:35;16409:16;;16434:13;;;-1:-1:-1;16409:16:35;16059:412;-1:-1:-1;16059:412:35:o;16476:245::-;16543:6;16596:2;16584:9;16575:7;16571:23;16567:32;16564:52;;;16612:1;16609;16602:12;16564:52;16644:9;16638:16;16663:28;16685:5;16663:28;:::i;18172:127::-;18233:10;18228:3;18224:20;18221:1;18214:31;18264:4;18261:1;18254:15;18288:4;18285:1;18278:15",
    "linkReferences": {},
    "immutableReferences": {
      "37283": [
        { "start": 762, "length": 32 },
        { "start": 3454, "length": 32 }
      ]
    }
  },
  "methodIdentifiers": {
    "APPROVE_TYPEHASH()": "c9f10f8c",
    "DOMAIN_SEPARATOR()": "3644e515",
    "basis()": "f385cecb",
    "calcNewFeeRatio(uint64,uint256)": "66609334",
    "collectFee()": "d4d5d32a",
    "deposit0(address,uint256,uint256,uint256)": "e146141c",
    "deposit1(address,uint256,uint256,uint256)": "30d6618e",
    "factory()": "c45a0155",
    "farm()": "36e9332d",
    "feeTo()": "017e7e58",
    "getFeeRatio()": "59362b88",
    "getPremium(uint256)": "1bf1fffb",
    "getReserves()": "0902f1ac",
    "halfLife()": "7bc90d1c",
    "initialize(address,address)": "485cc955",
    "nonces(address)": "7ecebe00",
    "noteCount(address)": "dc950d36",
    "notes(address,uint256)": "e0b117ff",
    "operatorApprovals(address,address)": "0d95e054",
    "rescueERC20(address,address,uint256)": "b2118a8d",
    "setApprovalForAll(address,bool)": "a22cb465",
    "setApprovalForAllWithSig(address,address,bool,uint256,bytes)": "7b7e9fac",
    "setBasis(uint256)": "7f568f18",
    "setFarm(address)": "d4f26c51",
    "setFeeTo(address)": "f46901ed",
    "setHalfLife(uint64)": "22ff2a8e",
    "swap0in(address,uint256,uint256)": "a9d9db4d",
    "swap1in(address,uint256,uint256)": "53d56bf5",
    "token0()": "0dfe1681",
    "token1()": "d21220a7",
    "withdraw(uint256,address)": "00f714ce",
    "withdrawFrom(address,uint256,address)": "e162402f"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bool\",\"name\":\"isToken0\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"token0Amt\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"token1Amt\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"due\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"token0Amt\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"token1Amt\",\"type\":\"uint256\"}],\"name\":\"FeeCollected\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bool\",\"name\":\"isSwap0\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bool\",\"name\":\"isToken0\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"APPROVE_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"basis\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_oldFeeRatio\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"_elapsedTime\",\"type\":\"uint256\"}],\"name\":\"calcNewFeeRatio\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"_newFeeRatio\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collectFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"input\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minOutput\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"deposit0\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"output\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"input\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minOutput\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"deposit1\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"output\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"farm\",\"outputs\":[{\"internalType\":\"contract IFarm\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeTo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFeeRatio\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"_feeRatio0\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"_feeRatio1\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"getPremium\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"premium\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReserves\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"reserve0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserve1\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"halfLife\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token1\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"noteCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"notes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"token0Amt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token1Amt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"due\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"operatorApprovals\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"rescueERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"sig\",\"type\":\"bytes\"}],\"name\":\"setApprovalForAllWithSig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_basis\",\"type\":\"uint256\"}],\"name\":\"setBasis\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_farm\",\"type\":\"address\"}],\"name\":\"setFarm\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeTo\",\"type\":\"address\"}],\"name\":\"setFeeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_halfLife\",\"type\":\"uint64\"}],\"name\":\"setHalfLife\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"input\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minOutput\",\"type\":\"uint256\"}],\"name\":\"swap0in\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"output\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"input\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minOutput\",\"type\":\"uint256\"}],\"name\":\"swap1in\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"output\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"token0Amt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token1Amt\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"withdrawFrom\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"token0Amt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token1Amt\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"calcNewFeeRatio(uint64,uint256)\":{\"details\":\"Calculate new fee ratio as time elapsed newFeeRatio = oldFeeRatio / 2^(elapsedTime / halfLife)\",\"params\":{\"_elapsedTime\":\"Time since last update\",\"_oldFeeRatio\":\"Fee ratio from last update\"},\"returns\":{\"_newFeeRatio\":\"New fee ratio\"}},\"deposit0(address,uint256,uint256,uint256)\":{\"details\":\"Re-entrancy protected\",\"params\":{\"input\":\"Amount of token0 to deposit\",\"minOutput\":\"Minimum amount of token1 expected to receive if the swap is perfromed\",\"time\":\"Lock time\",\"to\":\"Address that owns the note\"},\"returns\":{\"output\":\"Amount of token1 received if the swap is performed\"}},\"deposit1(address,uint256,uint256,uint256)\":{\"details\":\"Re-entrancy protected\",\"params\":{\"input\":\"Amount of token1 to deposit\",\"minOutput\":\"Minimum amount of token0 expected to receive if the swap is perfromed\",\"time\":\"Lock time\",\"to\":\"Address that owns the note\"},\"returns\":{\"output\":\"Amount of token0 received if the swap is performed\"}},\"getFeeRatio()\":{\"returns\":{\"_feeRatio0\":\"Fee ratio of token0 after halving update\",\"_feeRatio1\":\"Fee ratio of token1 after halving update\"}},\"getPremium(uint256)\":{\"details\":\"sqrt(time / 365 days) * 0.4 is pre-calculated to save gas. Note that premium could be larger than `PREMIUM_BASE_UNIT`\",\"params\":{\"time\":\"Lock time. It can be either 1 day, 3 days, 7 days or 30 days\"},\"returns\":{\"premium\":\"Premium\"}},\"rescueERC20(address,address,uint256)\":{\"params\":{\"amount\":\"Amount of token to be rescued\",\"to\":\"Address that will receive token\",\"tokenAddress\":\"Address of token to be rescued\"}},\"setApprovalForAll(address,bool)\":{\"params\":{\"approved\":\"Whether the operator is approved or not\",\"operator\":\"Address of the operator\"}},\"setApprovalForAllWithSig(address,address,bool,uint256,bytes)\":{\"params\":{\"approved\":\"Whether the operator is approved or not\",\"deadline\":\"deadline of the signature\",\"operator\":\"Address of the operator\",\"owner\":\"Address of the user who owns the note\",\"sig\":\"approval signature\"}},\"swap0in(address,uint256,uint256)\":{\"details\":\"Re-entrancy protected\",\"params\":{\"input\":\"Amount of token0 to swap\",\"minOutput\":\"Minimum amount of token1 expected to receive\",\"to\":\"Address that receives swapped token1\"},\"returns\":{\"output\":\"Amount of token1 swapped\"}},\"swap1in(address,uint256,uint256)\":{\"details\":\"Re-entrancy protected\",\"params\":{\"input\":\"Amount of token1 to swap\",\"minOutput\":\"Minimum amount of token0 expected to receive\",\"to\":\"Address that receives swapped token0\"},\"returns\":{\"output\":\"Amount of token0 swapped\"}},\"withdraw(uint256,address)\":{\"details\":\"Re-entrancy protected\",\"params\":{\"index\":\"Index of the note owned by user\",\"to\":\"Address to receive the redeemed token0 or token1\"},\"returns\":{\"token0Amt\":\"Amount of token0 withdrawn\",\"token1Amt\":\"Amount of token1 withdrawn\"}},\"withdrawFrom(address,uint256,address)\":{\"params\":{\"from\":\"Address of the user withdrawing\",\"index\":\"Index of the note\",\"to\":\"Address to receive the redeemed token0 or token1\"},\"returns\":{\"token0Amt\":\"Amount of token0 withdrawn\",\"token1Amt\":\"Amount of token1 withdrawn\"}}},\"stateVariables\":{\"DOMAIN_SEPARATOR\":{\"details\":\"For EIP712\"},\"MAX_FEE_RATIO_SQRT\":{\"details\":\"Square root of `MAX_FEE_RATIO`\"},\"PREMIUM_BASE_UNIT\":{\"details\":\"Beware that fee ratio and premium base unit are different\"},\"factory\":{\"details\":\"Factory of this contract\"}},\"title\":\"Dyson pair contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"basis()\":{\"notice\":\"Volatility which affects premium and can be set by governance, i.e. controller of factory contract\"},\"calcNewFeeRatio(uint64,uint256)\":{\"notice\":\"Fee ratio halve every `halfLife` seconds\"},\"deposit0(address,uint256,uint256,uint256)\":{\"notice\":\"User deposit token0. This function simulates it as `swap0in` but only charges fee base on the fee computed and does not perform actual swap. Half of the swap fee goes to `feeTo` if `feeTo` is set. If `farm` is set, this function also computes the amount of SP for the user and calls `farm.grantSP()`. The amount of SP = sqrt(input * output) * (preium / PREMIUM_BASE_UNIT)\"},\"deposit1(address,uint256,uint256,uint256)\":{\"notice\":\"User deposit token1. This function simulates it as `swap1in` but only charges fee base on the fee computed and does not perform actual swap. Half of the swap fee goes to `feeTo` if `feeTo` is set. If `farm` is set, this function also computes the amount of SP for the user and calls `farm.grantSP()`. The amount of SP = sqrt(input * output) * (preium / PREMIUM_BASE_UNIT)\"},\"feeTo()\":{\"notice\":\"Fee recipient\"},\"getFeeRatio()\":{\"notice\":\"The fee ratios returned are the stored fee ratios with halving applied\"},\"getPremium(uint256)\":{\"notice\":\"Premium = volatility * sqrt(time / 365 days) * 0.4\"},\"nonces(address)\":{\"notice\":\"User's approval nonce\"},\"noteCount(address)\":{\"notice\":\"Total number of notes created by user\"},\"notes(address,uint256)\":{\"notice\":\"Notes created by user, indexed by note number\"},\"operatorApprovals(address,address)\":{\"notice\":\"Operator is the address that can withdraw note on behalf of user\"},\"rescueERC20(address,address,uint256)\":{\"notice\":\"rescue token stucked in this contract\"},\"setApprovalForAll(address,bool)\":{\"notice\":\"Approve operator to withdraw note on behalf of user\"},\"setApprovalForAllWithSig(address,address,bool,uint256,bytes)\":{\"notice\":\"Approve operator to withdraw note on behalf of user User who signs the approval signature must be the `owner`\"},\"setBasis(uint256)\":{\"notice\":\"`basis` can only be set by governance, i.e., controller of factory contract\"},\"setFarm(address)\":{\"notice\":\"`farm` can only be set by governance, i.e., controller of factory contract\"},\"setFeeTo(address)\":{\"notice\":\"`feeTo` can only be set by governance, i.e., controller of factory contract\"},\"setHalfLife(uint64)\":{\"notice\":\"`halfLife` can only be set by governance, i.e., controller of factory contract\"},\"swap0in(address,uint256,uint256)\":{\"notice\":\"Perfrom swap from token0 to token1 Half of the swap fee goes to `feeTo` if `feeTo` is set\"},\"swap1in(address,uint256,uint256)\":{\"notice\":\"Perfrom swap from token1 to token0 Half of the swap fee goes to `feeTo` if `feeTo` is set\"},\"withdraw(uint256,address)\":{\"notice\":\"Withdraw the note and receive either one of token0 or token1\"},\"withdrawFrom(address,uint256,address)\":{\"notice\":\"Withdraw the note and receive either one of token0 or token1 if approved by user\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Pair.sol\":\"Pair\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"src/Pair.sol\":{\"keccak256\":\"0x859bd407a1ce7cd27c194ced8f75ccf09eb05bfe023ea454935d5c9d98b1aa12\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://35cda7b1be8646a4a744e26c66146e4a8fa23ed0ed06ff79db62f5a790807cb9\",\"dweb:/ipfs/QmP2u4aGTTPx5VoNMCaEJSdpNjL7vUzJxyhLz2oXFWUidk\"]},\"src/interface/IERC20.sol\":{\"keccak256\":\"0x51ff9ea85b0f83b9651f80655a00aa2ec4987daff855298fe4a3f24282dac100\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cfed1e5e479d176e4d9e6a45cb65a20c936ccb302e2143e08f95932f944cd6d8\",\"dweb:/ipfs/Qmem1eNQVJ1mGJWiYT6coCYPJccqLEmz533cFDGPDkU1zS\"]},\"src/interface/IFactory.sol\":{\"keccak256\":\"0xe8d5a70aa8f094757d651a162cdb05600dbace6f70c9aaf68d52551c81b0b26a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e7078f64c08c12d096d54893285f98d566572171d242f0c7c6e50243e123fe8\",\"dweb:/ipfs/QmW7sqvvHvEHPiSvartuLWpnWnhxVktPeHzAFVkw2yeyJC\"]},\"src/interface/IFarm.sol\":{\"keccak256\":\"0xae978466bcee9228cebabe282bf9bb399577a08a1c828da8f7861cac5cbdbd27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f31013be7d851c70ea12e869b896632cf15a0cb2c99629d0eeca6d9b16c9b464\",\"dweb:/ipfs/QmZWrJK1Uf8a1Snwo1yD4WaWs7YHQVYEBv6ecu92EmuuZv\"]},\"src/lib/ABDKMath64x64.sol\":{\"keccak256\":\"0x6b17d440ed26d0301dc68b5d8dd5ba2f6c2b58acc49d17eab17088d13dd21b06\",\"license\":\"AGPL-2.0\",\"urls\":[\"bzz-raw://05da3ba44e2433ce66959de708b4179e77047dc943478c8f342bff753e794c81\",\"dweb:/ipfs/Qmdf4ZFhxYWMHCqV9aJmq5GBxDJXxumiK3JBCsxuVrTwwU\"]},\"src/lib/SqrtMath.sol\":{\"keccak256\":\"0x02ab63ab65b170865ded5cef5b7c3f687631d367aba1d2fb45bdbc13e2c7a324\",\"license\":\"AGPL-2.0\",\"urls\":[\"bzz-raw://385257744e989eca330cbfdf959b17fb0b656b7692a346ea8cecfac2ef5ad465\",\"dweb:/ipfs/QmdR2uuBBHEW78dRSuFhFyz1taSi4KZBSMmo8z6XwHB5kq\"]},\"src/lib/TransferHelper.sol\":{\"keccak256\":\"0xe0e02257681bc57b2f48dee084a993d84a27b73c746155e721744df81d1a43fb\",\"license\":\"AGPL-2.0\",\"urls\":[\"bzz-raw://62035f13e2a80b4e43edd920e8dd34e4a6ae34508055695b3eeabf48679fde44\",\"dweb:/ipfs/QmVE2W8MhPtA6gnC26qUfa9u9yUg5w42y4H41M9NLMSyaP\"]}},\"version\":1}",
  "metadata": {
    "compiler": { "version": "0.8.17+commit.8df45f5f" },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ApprovalForAll",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "isToken0",
              "type": "bool",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amountIn",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "token0Amt",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "token1Amt",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "due",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Deposit",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "token0Amt",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "token1Amt",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "FeeCollected",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "isSwap0",
              "type": "bool",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amountIn",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amountOut",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Swap",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "isToken0",
              "type": "bool",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amountOut",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Withdraw",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "APPROVE_TYPEHASH",
          "outputs": [
            { "internalType": "bytes32", "name": "", "type": "bytes32" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DOMAIN_SEPARATOR",
          "outputs": [
            { "internalType": "bytes32", "name": "", "type": "bytes32" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "basis",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint64",
              "name": "_oldFeeRatio",
              "type": "uint64"
            },
            {
              "internalType": "uint256",
              "name": "_elapsedTime",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "calcNewFeeRatio",
          "outputs": [
            {
              "internalType": "uint64",
              "name": "_newFeeRatio",
              "type": "uint64"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "collectFee"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "to", "type": "address" },
            { "internalType": "uint256", "name": "input", "type": "uint256" },
            {
              "internalType": "uint256",
              "name": "minOutput",
              "type": "uint256"
            },
            { "internalType": "uint256", "name": "time", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deposit0",
          "outputs": [
            { "internalType": "uint256", "name": "output", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "to", "type": "address" },
            { "internalType": "uint256", "name": "input", "type": "uint256" },
            {
              "internalType": "uint256",
              "name": "minOutput",
              "type": "uint256"
            },
            { "internalType": "uint256", "name": "time", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deposit1",
          "outputs": [
            { "internalType": "uint256", "name": "output", "type": "uint256" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "factory",
          "outputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "farm",
          "outputs": [
            { "internalType": "contract IFarm", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "feeTo",
          "outputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getFeeRatio",
          "outputs": [
            {
              "internalType": "uint64",
              "name": "_feeRatio0",
              "type": "uint64"
            },
            { "internalType": "uint64", "name": "_feeRatio1", "type": "uint64" }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "time", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPremium",
          "outputs": [
            { "internalType": "uint256", "name": "premium", "type": "uint256" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getReserves",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "reserve0",
              "type": "uint256"
            },
            { "internalType": "uint256", "name": "reserve1", "type": "uint256" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "halfLife",
          "outputs": [
            { "internalType": "uint64", "name": "", "type": "uint64" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "_token0", "type": "address" },
            { "internalType": "address", "name": "_token1", "type": "address" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "nonces",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "noteCount",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "", "type": "address" },
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "notes",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "token0Amt",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "token1Amt",
              "type": "uint256"
            },
            { "internalType": "uint256", "name": "due", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "", "type": "address" },
            { "internalType": "address", "name": "", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "operatorApprovals",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenAddress",
              "type": "address"
            },
            { "internalType": "address", "name": "to", "type": "address" },
            { "internalType": "uint256", "name": "amount", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "rescueERC20"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            { "internalType": "bool", "name": "approved", "type": "bool" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovalForAll"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "owner", "type": "address" },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            { "internalType": "bool", "name": "approved", "type": "bool" },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            { "internalType": "bytes", "name": "sig", "type": "bytes" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovalForAllWithSig"
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "_basis", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setBasis"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "_farm", "type": "address" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setFarm"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "_feeTo", "type": "address" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setFeeTo"
        },
        {
          "inputs": [
            { "internalType": "uint64", "name": "_halfLife", "type": "uint64" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setHalfLife"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "to", "type": "address" },
            { "internalType": "uint256", "name": "input", "type": "uint256" },
            {
              "internalType": "uint256",
              "name": "minOutput",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "swap0in",
          "outputs": [
            { "internalType": "uint256", "name": "output", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "to", "type": "address" },
            { "internalType": "uint256", "name": "input", "type": "uint256" },
            {
              "internalType": "uint256",
              "name": "minOutput",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "swap1in",
          "outputs": [
            { "internalType": "uint256", "name": "output", "type": "uint256" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "token0",
          "outputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "token1",
          "outputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "index", "type": "uint256" },
            { "internalType": "address", "name": "to", "type": "address" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdraw",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "token0Amt",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "token1Amt",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "from", "type": "address" },
            { "internalType": "uint256", "name": "index", "type": "uint256" },
            { "internalType": "address", "name": "to", "type": "address" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawFrom",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "token0Amt",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "token1Amt",
              "type": "uint256"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "calcNewFeeRatio(uint64,uint256)": {
            "details": "Calculate new fee ratio as time elapsed newFeeRatio = oldFeeRatio / 2^(elapsedTime / halfLife)",
            "params": {
              "_elapsedTime": "Time since last update",
              "_oldFeeRatio": "Fee ratio from last update"
            },
            "returns": { "_newFeeRatio": "New fee ratio" }
          },
          "deposit0(address,uint256,uint256,uint256)": {
            "details": "Re-entrancy protected",
            "params": {
              "input": "Amount of token0 to deposit",
              "minOutput": "Minimum amount of token1 expected to receive if the swap is perfromed",
              "time": "Lock time",
              "to": "Address that owns the note"
            },
            "returns": {
              "output": "Amount of token1 received if the swap is performed"
            }
          },
          "deposit1(address,uint256,uint256,uint256)": {
            "details": "Re-entrancy protected",
            "params": {
              "input": "Amount of token1 to deposit",
              "minOutput": "Minimum amount of token0 expected to receive if the swap is perfromed",
              "time": "Lock time",
              "to": "Address that owns the note"
            },
            "returns": {
              "output": "Amount of token0 received if the swap is performed"
            }
          },
          "getFeeRatio()": {
            "returns": {
              "_feeRatio0": "Fee ratio of token0 after halving update",
              "_feeRatio1": "Fee ratio of token1 after halving update"
            }
          },
          "getPremium(uint256)": {
            "details": "sqrt(time / 365 days) * 0.4 is pre-calculated to save gas. Note that premium could be larger than `PREMIUM_BASE_UNIT`",
            "params": {
              "time": "Lock time. It can be either 1 day, 3 days, 7 days or 30 days"
            },
            "returns": { "premium": "Premium" }
          },
          "rescueERC20(address,address,uint256)": {
            "params": {
              "amount": "Amount of token to be rescued",
              "to": "Address that will receive token",
              "tokenAddress": "Address of token to be rescued"
            }
          },
          "setApprovalForAll(address,bool)": {
            "params": {
              "approved": "Whether the operator is approved or not",
              "operator": "Address of the operator"
            }
          },
          "setApprovalForAllWithSig(address,address,bool,uint256,bytes)": {
            "params": {
              "approved": "Whether the operator is approved or not",
              "deadline": "deadline of the signature",
              "operator": "Address of the operator",
              "owner": "Address of the user who owns the note",
              "sig": "approval signature"
            }
          },
          "swap0in(address,uint256,uint256)": {
            "details": "Re-entrancy protected",
            "params": {
              "input": "Amount of token0 to swap",
              "minOutput": "Minimum amount of token1 expected to receive",
              "to": "Address that receives swapped token1"
            },
            "returns": { "output": "Amount of token1 swapped" }
          },
          "swap1in(address,uint256,uint256)": {
            "details": "Re-entrancy protected",
            "params": {
              "input": "Amount of token1 to swap",
              "minOutput": "Minimum amount of token0 expected to receive",
              "to": "Address that receives swapped token0"
            },
            "returns": { "output": "Amount of token0 swapped" }
          },
          "withdraw(uint256,address)": {
            "details": "Re-entrancy protected",
            "params": {
              "index": "Index of the note owned by user",
              "to": "Address to receive the redeemed token0 or token1"
            },
            "returns": {
              "token0Amt": "Amount of token0 withdrawn",
              "token1Amt": "Amount of token1 withdrawn"
            }
          },
          "withdrawFrom(address,uint256,address)": {
            "params": {
              "from": "Address of the user withdrawing",
              "index": "Index of the note",
              "to": "Address to receive the redeemed token0 or token1"
            },
            "returns": {
              "token0Amt": "Amount of token0 withdrawn",
              "token1Amt": "Amount of token1 withdrawn"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "basis()": {
            "notice": "Volatility which affects premium and can be set by governance, i.e. controller of factory contract"
          },
          "calcNewFeeRatio(uint64,uint256)": {
            "notice": "Fee ratio halve every `halfLife` seconds"
          },
          "deposit0(address,uint256,uint256,uint256)": {
            "notice": "User deposit token0. This function simulates it as `swap0in` but only charges fee base on the fee computed and does not perform actual swap. Half of the swap fee goes to `feeTo` if `feeTo` is set. If `farm` is set, this function also computes the amount of SP for the user and calls `farm.grantSP()`. The amount of SP = sqrt(input * output) * (preium / PREMIUM_BASE_UNIT)"
          },
          "deposit1(address,uint256,uint256,uint256)": {
            "notice": "User deposit token1. This function simulates it as `swap1in` but only charges fee base on the fee computed and does not perform actual swap. Half of the swap fee goes to `feeTo` if `feeTo` is set. If `farm` is set, this function also computes the amount of SP for the user and calls `farm.grantSP()`. The amount of SP = sqrt(input * output) * (preium / PREMIUM_BASE_UNIT)"
          },
          "feeTo()": { "notice": "Fee recipient" },
          "getFeeRatio()": {
            "notice": "The fee ratios returned are the stored fee ratios with halving applied"
          },
          "getPremium(uint256)": {
            "notice": "Premium = volatility * sqrt(time / 365 days) * 0.4"
          },
          "nonces(address)": { "notice": "User's approval nonce" },
          "noteCount(address)": {
            "notice": "Total number of notes created by user"
          },
          "notes(address,uint256)": {
            "notice": "Notes created by user, indexed by note number"
          },
          "operatorApprovals(address,address)": {
            "notice": "Operator is the address that can withdraw note on behalf of user"
          },
          "rescueERC20(address,address,uint256)": {
            "notice": "rescue token stucked in this contract"
          },
          "setApprovalForAll(address,bool)": {
            "notice": "Approve operator to withdraw note on behalf of user"
          },
          "setApprovalForAllWithSig(address,address,bool,uint256,bytes)": {
            "notice": "Approve operator to withdraw note on behalf of user User who signs the approval signature must be the `owner`"
          },
          "setBasis(uint256)": {
            "notice": "`basis` can only be set by governance, i.e., controller of factory contract"
          },
          "setFarm(address)": {
            "notice": "`farm` can only be set by governance, i.e., controller of factory contract"
          },
          "setFeeTo(address)": {
            "notice": "`feeTo` can only be set by governance, i.e., controller of factory contract"
          },
          "setHalfLife(uint64)": {
            "notice": "`halfLife` can only be set by governance, i.e., controller of factory contract"
          },
          "swap0in(address,uint256,uint256)": {
            "notice": "Perfrom swap from token0 to token1 Half of the swap fee goes to `feeTo` if `feeTo` is set"
          },
          "swap1in(address,uint256,uint256)": {
            "notice": "Perfrom swap from token1 to token0 Half of the swap fee goes to `feeTo` if `feeTo` is set"
          },
          "withdraw(uint256,address)": {
            "notice": "Withdraw the note and receive either one of token0 or token1"
          },
          "withdrawFrom(address,uint256,address)": {
            "notice": "Withdraw the note and receive either one of token0 or token1 if approved by user"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": ["forge-std/=lib/forge-std/src/"],
      "optimizer": { "enabled": true, "runs": 200 },
      "metadata": { "bytecodeHash": "ipfs" },
      "compilationTarget": { "src/Pair.sol": "Pair" },
      "evmVersion": "london",
      "libraries": {}
    },
    "sources": {
      "src/Pair.sol": {
        "keccak256": "0x859bd407a1ce7cd27c194ced8f75ccf09eb05bfe023ea454935d5c9d98b1aa12",
        "urls": [
          "bzz-raw://35cda7b1be8646a4a744e26c66146e4a8fa23ed0ed06ff79db62f5a790807cb9",
          "dweb:/ipfs/QmP2u4aGTTPx5VoNMCaEJSdpNjL7vUzJxyhLz2oXFWUidk"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/interface/IERC20.sol": {
        "keccak256": "0x51ff9ea85b0f83b9651f80655a00aa2ec4987daff855298fe4a3f24282dac100",
        "urls": [
          "bzz-raw://cfed1e5e479d176e4d9e6a45cb65a20c936ccb302e2143e08f95932f944cd6d8",
          "dweb:/ipfs/Qmem1eNQVJ1mGJWiYT6coCYPJccqLEmz533cFDGPDkU1zS"
        ],
        "license": "MIT"
      },
      "src/interface/IFactory.sol": {
        "keccak256": "0xe8d5a70aa8f094757d651a162cdb05600dbace6f70c9aaf68d52551c81b0b26a",
        "urls": [
          "bzz-raw://1e7078f64c08c12d096d54893285f98d566572171d242f0c7c6e50243e123fe8",
          "dweb:/ipfs/QmW7sqvvHvEHPiSvartuLWpnWnhxVktPeHzAFVkw2yeyJC"
        ],
        "license": "MIT"
      },
      "src/interface/IFarm.sol": {
        "keccak256": "0xae978466bcee9228cebabe282bf9bb399577a08a1c828da8f7861cac5cbdbd27",
        "urls": [
          "bzz-raw://f31013be7d851c70ea12e869b896632cf15a0cb2c99629d0eeca6d9b16c9b464",
          "dweb:/ipfs/QmZWrJK1Uf8a1Snwo1yD4WaWs7YHQVYEBv6ecu92EmuuZv"
        ],
        "license": "MIT"
      },
      "src/lib/ABDKMath64x64.sol": {
        "keccak256": "0x6b17d440ed26d0301dc68b5d8dd5ba2f6c2b58acc49d17eab17088d13dd21b06",
        "urls": [
          "bzz-raw://05da3ba44e2433ce66959de708b4179e77047dc943478c8f342bff753e794c81",
          "dweb:/ipfs/Qmdf4ZFhxYWMHCqV9aJmq5GBxDJXxumiK3JBCsxuVrTwwU"
        ],
        "license": "AGPL-2.0"
      },
      "src/lib/SqrtMath.sol": {
        "keccak256": "0x02ab63ab65b170865ded5cef5b7c3f687631d367aba1d2fb45bdbc13e2c7a324",
        "urls": [
          "bzz-raw://385257744e989eca330cbfdf959b17fb0b656b7692a346ea8cecfac2ef5ad465",
          "dweb:/ipfs/QmdR2uuBBHEW78dRSuFhFyz1taSi4KZBSMmo8z6XwHB5kq"
        ],
        "license": "AGPL-2.0"
      },
      "src/lib/TransferHelper.sol": {
        "keccak256": "0xe0e02257681bc57b2f48dee084a993d84a27b73c746155e721744df81d1a43fb",
        "urls": [
          "bzz-raw://62035f13e2a80b4e43edd920e8dd34e4a6ae34508055695b3eeabf48679fde44",
          "dweb:/ipfs/QmVE2W8MhPtA6gnC26qUfa9u9yUg5w42y4H41M9NLMSyaP"
        ],
        "license": "AGPL-2.0"
      }
    },
    "version": 1
  },
  "id": 23
}
